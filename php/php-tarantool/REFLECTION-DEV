Extension [ <persistent> extension #125 tarantool version 0.1.0 ] {

  - INI {
    Entry [ tarantool.persistent <ALL> ]
      Current = '0'
    }
    Entry [ tarantool.use_namespace <SYSTEM> ]
      Current = '0'
    }
    Entry [ tarantool.connection_alias <SYSTEM> ]
      Current = '0'
    }
    Entry [ tarantool.timeout <ALL> ]
      Current = '10.0'
    }
    Entry [ tarantool.request_timeout <ALL> ]
      Current = '10.0'
    }
    Entry [ tarantool.retry_count <ALL> ]
      Current = '1'
    }
    Entry [ tarantool.retry_sleep <ALL> ]
      Current = '0.1'
    }
  }

  - Constants [12] {
    Constant [ integer TARANTOOL_ITER_EQ ] { 0 }
    Constant [ integer TARANTOOL_ITER_REQ ] { 1 }
    Constant [ integer TARANTOOL_ITER_ALL ] { 2 }
    Constant [ integer TARANTOOL_ITER_LT ] { 3 }
    Constant [ integer TARANTOOL_ITER_LE ] { 4 }
    Constant [ integer TARANTOOL_ITER_GE ] { 5 }
    Constant [ integer TARANTOOL_ITER_GT ] { 6 }
    Constant [ integer TARANTOOL_ITER_BITSET_ALL_SET ] { 7 }
    Constant [ integer TARANTOOL_ITER_BITSET_ANY_SET ] { 8 }
    Constant [ integer TARANTOOL_ITER_BITSET_ALL_NOT_SET ] { 9 }
    Constant [ integer TARANTOOL_ITER_OVERLAPS ] { 10 }
    Constant [ integer TARANTOOL_ITER_NEIGHBOR ] { 11 }
  }

  - Classes [5] {
    Class [ <internal:tarantool> class Tarantool ] {

      - Constants [15] {
        Constant [ integer ITERATOR_EQ ] { 0 }
        Constant [ integer ITERATOR_REQ ] { 1 }
        Constant [ integer ITERATOR_ALL ] { 2 }
        Constant [ integer ITERATOR_LT ] { 3 }
        Constant [ integer ITERATOR_LE ] { 4 }
        Constant [ integer ITERATOR_GE ] { 5 }
        Constant [ integer ITERATOR_GT ] { 6 }
        Constant [ integer ITERATOR_BITS_ALL_SET ] { 7 }
        Constant [ integer ITERATOR_BITSET_ALL_SET ] { 7 }
        Constant [ integer ITERATOR_BITS_ANY_SET ] { 8 }
        Constant [ integer ITERATOR_BITSET_ANY_SET ] { 8 }
        Constant [ integer ITERATOR_BITS_ALL_NOT_SET ] { 9 }
        Constant [ integer ITERATOR_BITSET_ALL_NOT_SET ] { 9 }
        Constant [ integer ITERATOR_OVERLAPS ] { 10 }
        Constant [ integer ITERATOR_NEIGHBOR ] { 11 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [18] {
        Method [ <internal:tarantool, ctor> public method __construct ] {

          - Parameters [5] {
            Parameter #0 [ <optional> $host ]
            Parameter #1 [ <optional> $port ]
            Parameter #2 [ <optional> $login ]
            Parameter #3 [ <optional> $password ]
            Parameter #4 [ <optional> $persistent_id ]
          }
        }

        Method [ <internal:tarantool> public method connect ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:tarantool> public method reconnect ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:tarantool> public method close ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:tarantool> public method flush_schema ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:tarantool> public method authenticate ] {

          - Parameters [2] {
            Parameter #0 [ <required> $login ]
            Parameter #1 [ <optional> $password ]
          }
        }

        Method [ <internal:tarantool> public method ping ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:tarantool> public method select ] {

          - Parameters [6] {
            Parameter #0 [ <required> $space ]
            Parameter #1 [ <optional> $key ]
            Parameter #2 [ <optional> $index ]
            Parameter #3 [ <optional> $limit ]
            Parameter #4 [ <optional> $offset ]
            Parameter #5 [ <optional> $iterator ]
          }
        }

        Method [ <internal:tarantool> public method insert ] {

          - Parameters [2] {
            Parameter #0 [ <required> $space ]
            Parameter #1 [ <required> array $tuple ]
          }
        }

        Method [ <internal:tarantool> public method replace ] {

          - Parameters [2] {
            Parameter #0 [ <required> $space ]
            Parameter #1 [ <required> array $tuple ]
          }
        }

        Method [ <internal:tarantool> public method call ] {

          - Parameters [2] {
            Parameter #0 [ <required> $proc ]
            Parameter #1 [ <optional> $tuple ]
          }
        }

        Method [ <internal:tarantool> public method eval ] {

          - Parameters [2] {
            Parameter #0 [ <required> $proc ]
            Parameter #1 [ <optional> $tuple ]
          }
        }

        Method [ <internal:tarantool> public method delete ] {

          - Parameters [3] {
            Parameter #0 [ <required> $space ]
            Parameter #1 [ <required> $key ]
            Parameter #2 [ <optional> $index ]
          }
        }

        Method [ <internal:tarantool> public method update ] {

          - Parameters [4] {
            Parameter #0 [ <required> $space ]
            Parameter #1 [ <required> $key ]
            Parameter #2 [ <required> array $args ]
            Parameter #3 [ <optional> $index ]
          }
        }

        Method [ <internal:tarantool> public method upsert ] {

          - Parameters [3] {
            Parameter #0 [ <required> $space ]
            Parameter #1 [ <required> array $tuple ]
            Parameter #2 [ <required> array $args ]
          }
        }

        Method [ <internal:tarantool> public method evaluate ] {

          - Parameters [2] {
            Parameter #0 [ <required> $proc ]
            Parameter #1 [ <optional> $tuple ]
          }
        }

        Method [ <internal:tarantool> public method flushSchema ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:tarantool> public method disconnect ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:tarantool> class TarantoolException extends Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:tarantool> class TarantoolIOException extends TarantoolException implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:tarantool> class TarantoolClientError extends TarantoolException implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:tarantool> class TarantoolParsingException extends TarantoolException implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }
  }
}

