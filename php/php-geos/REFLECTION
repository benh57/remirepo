Extension [ <persistent> extension #89 geos version 1.0.0 ] {

  - Constants [20] {
    Constant [ integer GEOSBUF_CAP_ROUND ] { 1 }
    Constant [ integer GEOSBUF_CAP_FLAT ] { 2 }
    Constant [ integer GEOSBUF_CAP_SQUARE ] { 3 }
    Constant [ integer GEOSBUF_JOIN_ROUND ] { 1 }
    Constant [ integer GEOSBUF_JOIN_MITRE ] { 2 }
    Constant [ integer GEOSBUF_JOIN_BEVEL ] { 3 }
    Constant [ integer GEOS_POINT ] { 0 }
    Constant [ integer GEOS_LINESTRING ] { 1 }
    Constant [ integer GEOS_LINEARRING ] { 2 }
    Constant [ integer GEOS_POLYGON ] { 3 }
    Constant [ integer GEOS_MULTIPOINT ] { 4 }
    Constant [ integer GEOS_MULTILINESTRING ] { 5 }
    Constant [ integer GEOS_MULTIPOLYGON ] { 6 }
    Constant [ integer GEOS_GEOMETRYCOLLECTION ] { 7 }
    Constant [ integer GEOSVALID_ALLOW_SELFTOUCHING_RING_FORMING_HOLE ] { 1 }
    Constant [ integer GEOSRELATE_BNR_MOD2 ] { 1 }
    Constant [ integer GEOSRELATE_BNR_OGC ] { 1 }
    Constant [ integer GEOSRELATE_BNR_ENDPOINT ] { 2 }
    Constant [ integer GEOSRELATE_BNR_MULTIVALENT_ENDPOINT ] { 3 }
    Constant [ integer GEOSRELATE_BNR_MONOVALENT_ENDPOINT ] { 4 }
  }

  - Functions {
    Function [ <internal:geos> function GEOSVersion ] {
    }
    Function [ <internal:geos> function GEOSPolygonize ] {
    }
    Function [ <internal:geos> function GEOSLineMerge ] {
    }
    Function [ <internal:geos> function GEOSSharedPaths ] {
    }
    Function [ <internal:geos> function GEOSRelateMatch ] {
    }
  }

  - Classes [5] {
    Class [ <internal:geos> class GEOSWKTReader ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [2] {
        Method [ <internal:geos, ctor> public method __construct ] {
        }

        Method [ <internal:geos> public method read ] {
        }
      }
    }

    Class [ <internal:geos> class GEOSWKTWriter ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:geos, ctor> public method __construct ] {
        }

        Method [ <internal:geos> public method write ] {
        }

        Method [ <internal:geos> public method setTrim ] {
        }

        Method [ <internal:geos> public method setRoundingPrecision ] {
        }

        Method [ <internal:geos> public method setOutputDimension ] {
        }

        Method [ <internal:geos> public method getOutputDimension ] {
        }

        Method [ <internal:geos> public method setOld3D ] {
        }
      }
    }

    Class [ <internal:geos> class GEOSGeometry ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [64] {
        Method [ <internal:geos, ctor> public method __construct ] {
        }

        Method [ <internal:geos> public method __toString ] {
        }

        Method [ <internal:geos> public method project ] {
        }

        Method [ <internal:geos> public method interpolate ] {
        }

        Method [ <internal:geos> public method buffer ] {
        }

        Method [ <internal:geos> public method offsetCurve ] {
        }

        Method [ <internal:geos> public method envelope ] {
        }

        Method [ <internal:geos> public method intersection ] {
        }

        Method [ <internal:geos> public method convexHull ] {
        }

        Method [ <internal:geos> public method difference ] {
        }

        Method [ <internal:geos> public method symDifference ] {
        }

        Method [ <internal:geos> public method boundary ] {
        }

        Method [ <internal:geos> public method union ] {
        }

        Method [ <internal:geos> public method pointOnSurface ] {
        }

        Method [ <internal:geos> public method centroid ] {
        }

        Method [ <internal:geos> public method relate ] {
        }

        Method [ <internal:geos> public method relateBoundaryNodeRule ] {
        }

        Method [ <internal:geos> public method simplify ] {
        }

        Method [ <internal:geos> public method normalize ] {
        }

        Method [ <internal:geos> public method extractUniquePoints ] {
        }

        Method [ <internal:geos> public method disjoint ] {
        }

        Method [ <internal:geos> public method touches ] {
        }

        Method [ <internal:geos> public method intersects ] {
        }

        Method [ <internal:geos> public method crosses ] {
        }

        Method [ <internal:geos> public method within ] {
        }

        Method [ <internal:geos> public method contains ] {
        }

        Method [ <internal:geos> public method overlaps ] {
        }

        Method [ <internal:geos> public method covers ] {
        }

        Method [ <internal:geos> public method coveredBy ] {
        }

        Method [ <internal:geos> public method equals ] {
        }

        Method [ <internal:geos> public method equalsExact ] {
        }

        Method [ <internal:geos> public method isEmpty ] {
        }

        Method [ <internal:geos> public method checkValidity ] {
        }

        Method [ <internal:geos> public method isSimple ] {
        }

        Method [ <internal:geos> public method isRing ] {
        }

        Method [ <internal:geos> public method hasZ ] {
        }

        Method [ <internal:geos> public method isClosed ] {
        }

        Method [ <internal:geos> public method typeName ] {
        }

        Method [ <internal:geos> public method typeId ] {
        }

        Method [ <internal:geos> public method getSRID ] {
        }

        Method [ <internal:geos> public method setSRID ] {
        }

        Method [ <internal:geos> public method numGeometries ] {
        }

        Method [ <internal:geos> public method geometryN ] {
        }

        Method [ <internal:geos> public method numInteriorRings ] {
        }

        Method [ <internal:geos> public method numPoints ] {
        }

        Method [ <internal:geos> public method getX ] {
        }

        Method [ <internal:geos> public method getY ] {
        }

        Method [ <internal:geos> public method interiorRingN ] {
        }

        Method [ <internal:geos> public method exteriorRing ] {
        }

        Method [ <internal:geos> public method numCoordinates ] {
        }

        Method [ <internal:geos> public method dimension ] {
        }

        Method [ <internal:geos> public method coordinateDimension ] {
        }

        Method [ <internal:geos> public method pointN ] {
        }

        Method [ <internal:geos> public method startPoint ] {
        }

        Method [ <internal:geos> public method endPoint ] {
        }

        Method [ <internal:geos> public method area ] {
        }

        Method [ <internal:geos> public method length ] {
        }

        Method [ <internal:geos> public method distance ] {
        }

        Method [ <internal:geos> public method hausdorffDistance ] {
        }

        Method [ <internal:geos> public method snapTo ] {
        }

        Method [ <internal:geos> public method node ] {
        }

        Method [ <internal:geos> public method delaunayTriangulation ] {
        }

        Method [ <internal:geos> public method voronoiDiagram ] {
        }

        Method [ <internal:geos> public method clipByRect ] {
        }
      }
    }

    Class [ <internal:geos> class GEOSWKBWriter ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [9] {
        Method [ <internal:geos, ctor> public method __construct ] {
        }

        Method [ <internal:geos> public method getOutputDimension ] {
        }

        Method [ <internal:geos> public method setOutputDimension ] {
        }

        Method [ <internal:geos> public method getByteOrder ] {
        }

        Method [ <internal:geos> public method setByteOrder ] {
        }

        Method [ <internal:geos> public method getIncludeSRID ] {
        }

        Method [ <internal:geos> public method setIncludeSRID ] {
        }

        Method [ <internal:geos> public method write ] {
        }

        Method [ <internal:geos> public method writeHEX ] {
        }
      }
    }

    Class [ <internal:geos> class GEOSWKBReader ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:geos, ctor> public method __construct ] {
        }

        Method [ <internal:geos> public method read ] {
        }

        Method [ <internal:geos> public method readHEX ] {
        }
      }
    }
  }
}

