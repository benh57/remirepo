Extension [ <persistent> extension #84 ev version 1.0.4 ] {

  - Dependencies {
    Dependency [ sockets (Optional) ]
  }

  - Classes [14] {
    Class [ <internal:ev> final class Ev ] {

      - Constants [34] {
        Constant [ integer FLAG_AUTO ] { 0 }
        Constant [ integer FLAG_NOENV ] { 16777216 }
        Constant [ integer FLAG_FORKCHECK ] { 33554432 }
        Constant [ integer FLAG_NOINOTIFY ] { 1048576 }
        Constant [ integer FLAG_SIGNALFD ] { 2097152 }
        Constant [ integer FLAG_NOSIGMASK ] { 4194304 }
        Constant [ integer RUN_NOWAIT ] { 1 }
        Constant [ integer RUN_ONCE ] { 2 }
        Constant [ integer BREAK_CANCEL ] { 0 }
        Constant [ integer BREAK_ONE ] { 1 }
        Constant [ integer BREAK_ALL ] { 2 }
        Constant [ integer MINPRI ] { -2 }
        Constant [ integer MAXPRI ] { 2 }
        Constant [ integer READ ] { 1 }
        Constant [ integer WRITE ] { 2 }
        Constant [ integer TIMER ] { 256 }
        Constant [ integer PERIODIC ] { 512 }
        Constant [ integer SIGNAL ] { 1024 }
        Constant [ integer CHILD ] { 2048 }
        Constant [ integer STAT ] { 4096 }
        Constant [ integer IDLE ] { 8192 }
        Constant [ integer PREPARE ] { 16384 }
        Constant [ integer CHECK ] { 32768 }
        Constant [ integer EMBED ] { 65536 }
        Constant [ integer CUSTOM ] { 16777216 }
        Constant [ integer ERROR ] { -2147483648 }
        Constant [ integer BACKEND_SELECT ] { 1 }
        Constant [ integer BACKEND_POLL ] { 2 }
        Constant [ integer BACKEND_EPOLL ] { 4 }
        Constant [ integer BACKEND_KQUEUE ] { 8 }
        Constant [ integer BACKEND_DEVPOLL ] { 16 }
        Constant [ integer BACKEND_PORT ] { 32 }
        Constant [ integer BACKEND_ALL ] { 63 }
        Constant [ integer BACKEND_MASK ] { 65535 }
      }

      - Static properties [0] {
      }

      - Static methods [17] {
        Method [ <internal:ev> final static public method supportedBackends ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> final static public method recommendedBackends ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> final static public method embeddableBackends ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> final static public method sleep ] {

          - Parameters [1] {
            Parameter #0 [ <required> $seconds ]
          }
        }

        Method [ <internal:ev> final static public method time ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> final static public method feedSignal ] {

          - Parameters [1] {
            Parameter #0 [ <required> $signum ]
          }
        }

        Method [ <internal:ev> final static public method feedSignalEvent ] {

          - Parameters [1] {
            Parameter #0 [ <required> $signum ]
          }
        }

        Method [ <internal:ev> final static public method run ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $flags ]
          }
        }

        Method [ <internal:ev> final static public method now ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> final static public method stop ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $how ]
          }
        }

        Method [ <internal:ev> final static public method iteration ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> final static public method depth ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> final static public method verify ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> final static public method backend ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> final static public method nowUpdate ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> final static public method suspend ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> final static public method resume ] {

          - Parameters [0] {
          }
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:ev> final class EvLoop ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ev> static public method defaultLoop ] {

          - Parameters [4] {
            Parameter #0 [ <optional> $flags ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $io_interval ]
            Parameter #3 [ <optional> $timeout_interval ]
          }
        }
      }

      - Properties [8] {
        Property [ <default> public $data ]
        Property [ <default> public $backend ]
        Property [ <default> public $is_default_loop ]
        Property [ <default> public $iteration ]
        Property [ <default> public $pending ]
        Property [ <default> public $io_interval ]
        Property [ <default> public $timeout_interval ]
        Property [ <default> public $depth ]
      }

      - Methods [22] {
        Method [ <internal:ev, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <optional> $flags ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $io_interval ]
            Parameter #3 [ <optional> $timeout_interval ]
          }
        }

        Method [ <internal:ev> public method loopFork ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method verify ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method invokePending ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method nowUpdate ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method suspend ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method resume ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method backend ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method now ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method run ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $flags ]
          }
        }

        Method [ <internal:ev> public method stop ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $how ]
          }
        }

        Method [ <internal:ev> final public method io ] {

          - Parameters [5] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $events ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $data ]
            Parameter #4 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> final public method timer ] {

          - Parameters [5] {
            Parameter #0 [ <required> $after ]
            Parameter #1 [ <required> $repeat ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $data ]
            Parameter #4 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> final public method periodic ] {

          - Parameters [5] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $interval ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $data ]
            Parameter #4 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> final public method signal ] {

          - Parameters [4] {
            Parameter #0 [ <required> $signum ]
            Parameter #1 [ <required> $callback ]
            Parameter #2 [ <optional> $data ]
            Parameter #3 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> final public method child ] {

          - Parameters [5] {
            Parameter #0 [ <required> $pid ]
            Parameter #1 [ <required> $trace ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $data ]
            Parameter #4 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> final public method stat ] {

          - Parameters [5] {
            Parameter #0 [ <required> $path ]
            Parameter #1 [ <required> $interval ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $data ]
            Parameter #4 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> final public method idle ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> final public method check ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> final public method prepare ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> final public method embed ] {

          - Parameters [4] {
            Parameter #0 [ <required> $other ]
            Parameter #1 [ <optional> $callback ]
            Parameter #2 [ <optional> $data ]
            Parameter #3 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> final public method fork ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $priority ]
          }
        }
      }
    }

    Class [ <internal:ev> abstract class EvWatcher ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> public $is_active ]
        Property [ <default> public $data ]
        Property [ <default> public $is_pending ]
        Property [ <default> public $priority ]
      }

      - Methods [9] {
        Method [ <internal:ev, ctor> abstract public method __construct ] {
        }

        Method [ <internal:ev> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method stop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method invoke ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev> public method feed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev> public method getLoop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method keepalive ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:ev> public method setCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:ev> class EvIo extends EvWatcher ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ev> final static public method createStopped ] {

          - Parameters [5] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $events ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $data ]
            Parameter #4 [ <optional> $priority ]
          }
        }
      }

      - Properties [6] {
        Property [ <default> public $is_active ]
        Property [ <default> public $data ]
        Property [ <default> public $is_pending ]
        Property [ <default> public $priority ]
        Property [ <default> public $fd ]
        Property [ <default> public $events ]
      }

      - Methods [10] {
        Method [ <internal:ev, overwrites EvWatcher, prototype EvWatcher, ctor> public method __construct ] {

          - Parameters [5] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $events ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $data ]
            Parameter #4 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> public method set ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $events ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method stop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method invoke ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method feed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method getLoop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method keepalive ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method setCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:ev> class EvTimer extends EvWatcher ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ev> final static public method createStopped ] {

          - Parameters [5] {
            Parameter #0 [ <required> $after ]
            Parameter #1 [ <required> $repeat ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $data ]
            Parameter #4 [ <optional> $priority ]
          }
        }
      }

      - Properties [6] {
        Property [ <default> public $is_active ]
        Property [ <default> public $data ]
        Property [ <default> public $is_pending ]
        Property [ <default> public $priority ]
        Property [ <default> public $repeat ]
        Property [ <default> public $remaining ]
      }

      - Methods [11] {
        Method [ <internal:ev, overwrites EvWatcher, prototype EvWatcher, ctor> public method __construct ] {

          - Parameters [5] {
            Parameter #0 [ <required> $after ]
            Parameter #1 [ <required> $repeat ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $data ]
            Parameter #4 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> public method set ] {

          - Parameters [2] {
            Parameter #0 [ <required> $after ]
            Parameter #1 [ <required> $repeat ]
          }
        }

        Method [ <internal:ev> public method again ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method stop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method invoke ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method feed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method getLoop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method keepalive ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method setCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:ev> class EvPeriodic extends EvWatcher ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ev> final static public method createStopped ] {

          - Parameters [6] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $interval ]
            Parameter #2 [ <required> $reschedule_cb ]
            Parameter #3 [ <required> $callback ]
            Parameter #4 [ <optional> $data ]
            Parameter #5 [ <optional> $priority ]
          }
        }
      }

      - Properties [6] {
        Property [ <default> public $is_active ]
        Property [ <default> public $data ]
        Property [ <default> public $is_pending ]
        Property [ <default> public $priority ]
        Property [ <default> public $offset ]
        Property [ <default> public $interval ]
      }

      - Methods [12] {
        Method [ <internal:ev, overwrites EvWatcher, prototype EvWatcher, ctor> public method __construct ] {

          - Parameters [6] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $interval ]
            Parameter #2 [ <required> $reschedule_cb ]
            Parameter #3 [ <required> $callback ]
            Parameter #4 [ <optional> $data ]
            Parameter #5 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> public method set ] {

          - Parameters [2] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $interval ]
          }
        }

        Method [ <internal:ev> public method again ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method at ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method stop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method invoke ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method feed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method getLoop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method keepalive ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method setCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:ev> class EvSignal extends EvWatcher ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ev> final static public method createStopped ] {

          - Parameters [4] {
            Parameter #0 [ <required> $signum ]
            Parameter #1 [ <required> $callback ]
            Parameter #2 [ <optional> $data ]
            Parameter #3 [ <optional> $priority ]
          }
        }
      }

      - Properties [5] {
        Property [ <default> public $is_active ]
        Property [ <default> public $data ]
        Property [ <default> public $is_pending ]
        Property [ <default> public $priority ]
        Property [ <default> public $signum ]
      }

      - Methods [10] {
        Method [ <internal:ev, overwrites EvWatcher, prototype EvWatcher, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $signum ]
            Parameter #1 [ <required> $callback ]
            Parameter #2 [ <optional> $data ]
            Parameter #3 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> $signum ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method stop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method invoke ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method feed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method getLoop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method keepalive ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method setCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:ev> class EvChild extends EvWatcher ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ev> final static public method createStopped ] {

          - Parameters [5] {
            Parameter #0 [ <required> $pid ]
            Parameter #1 [ <required> $trace ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $data ]
            Parameter #4 [ <optional> $priority ]
          }
        }
      }

      - Properties [7] {
        Property [ <default> public $is_active ]
        Property [ <default> public $data ]
        Property [ <default> public $is_pending ]
        Property [ <default> public $priority ]
        Property [ <default> public $pid ]
        Property [ <default> public $rpid ]
        Property [ <default> public $rstatus ]
      }

      - Methods [10] {
        Method [ <internal:ev, overwrites EvWatcher, prototype EvWatcher, ctor> public method __construct ] {

          - Parameters [5] {
            Parameter #0 [ <required> $pid ]
            Parameter #1 [ <required> $trace ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $data ]
            Parameter #4 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> public method set ] {

          - Parameters [2] {
            Parameter #0 [ <required> $pid ]
            Parameter #1 [ <required> $trace ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method stop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method invoke ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method feed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method getLoop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method keepalive ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method setCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:ev> class EvStat extends EvWatcher ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ev> final static public method createStopped ] {

          - Parameters [5] {
            Parameter #0 [ <required> $path ]
            Parameter #1 [ <required> $interval ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $data ]
            Parameter #4 [ <optional> $priority ]
          }
        }
      }

      - Properties [6] {
        Property [ <default> public $is_active ]
        Property [ <default> public $data ]
        Property [ <default> public $is_pending ]
        Property [ <default> public $priority ]
        Property [ <default> public $path ]
        Property [ <default> public $interval ]
      }

      - Methods [13] {
        Method [ <internal:ev, overwrites EvWatcher, prototype EvWatcher, ctor> public method __construct ] {

          - Parameters [5] {
            Parameter #0 [ <required> $path ]
            Parameter #1 [ <required> $interval ]
            Parameter #2 [ <required> $callback ]
            Parameter #3 [ <optional> $data ]
            Parameter #4 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> public method set ] {

          - Parameters [2] {
            Parameter #0 [ <required> $path ]
            Parameter #1 [ <required> $interval ]
          }
        }

        Method [ <internal:ev> public method attr ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method prev ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev> public method stat ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method stop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method invoke ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method feed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method getLoop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method keepalive ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method setCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:ev> class EvIdle extends EvWatcher ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ev> final static public method createStopped ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $priority ]
          }
        }
      }

      - Properties [4] {
        Property [ <default> public $is_active ]
        Property [ <default> public $data ]
        Property [ <default> public $is_pending ]
        Property [ <default> public $priority ]
      }

      - Methods [9] {
        Method [ <internal:ev, overwrites EvWatcher, prototype EvWatcher, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method stop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method invoke ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method feed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method getLoop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method keepalive ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method setCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:ev> class EvCheck extends EvWatcher ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ev> final static public method createStopped ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $priority ]
          }
        }
      }

      - Properties [4] {
        Property [ <default> public $is_active ]
        Property [ <default> public $data ]
        Property [ <default> public $is_pending ]
        Property [ <default> public $priority ]
      }

      - Methods [9] {
        Method [ <internal:ev, overwrites EvWatcher, prototype EvWatcher, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method stop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method invoke ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method feed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method getLoop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method keepalive ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method setCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:ev> class EvPrepare extends EvWatcher ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ev> final static public method createStopped ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $priority ]
          }
        }
      }

      - Properties [4] {
        Property [ <default> public $is_active ]
        Property [ <default> public $data ]
        Property [ <default> public $is_pending ]
        Property [ <default> public $priority ]
      }

      - Methods [9] {
        Method [ <internal:ev, overwrites EvWatcher, prototype EvWatcher, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method stop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method invoke ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method feed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method getLoop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method keepalive ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method setCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:ev> class EvEmbed extends EvWatcher ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ev> final static public method createStopped ] {

          - Parameters [4] {
            Parameter #0 [ <required> $other ]
            Parameter #1 [ <optional> $callback ]
            Parameter #2 [ <optional> $data ]
            Parameter #3 [ <optional> $priority ]
          }
        }
      }

      - Properties [5] {
        Property [ <default> public $is_active ]
        Property [ <default> public $data ]
        Property [ <default> public $is_pending ]
        Property [ <default> public $priority ]
        Property [ <default> public $embed ]
      }

      - Methods [11] {
        Method [ <internal:ev, overwrites EvWatcher, prototype EvWatcher, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $other ]
            Parameter #1 [ <optional> $callback ]
            Parameter #2 [ <optional> $data ]
            Parameter #3 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> $other ]
          }
        }

        Method [ <internal:ev> public method sweep ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method stop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method invoke ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method feed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method getLoop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method keepalive ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method setCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:ev> class EvFork extends EvWatcher ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ev> final static public method createStopped ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $priority ]
          }
        }
      }

      - Properties [4] {
        Property [ <default> public $is_active ]
        Property [ <default> public $data ]
        Property [ <default> public $is_pending ]
        Property [ <default> public $priority ]
      }

      - Methods [9] {
        Method [ <internal:ev, overwrites EvWatcher, prototype EvWatcher, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $data ]
            Parameter #2 [ <optional> $priority ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method stop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method invoke ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method feed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $revents ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method getLoop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method keepalive ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:ev, inherits EvWatcher> public method setCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }
    }
  }
}

