Extension [ <persistent> extension #86 gnupg version 1.4.0 ] {

  - Constants [25] {
    Constant [ integer GNUPG_SIG_MODE_NORMAL ] { 0 }
    Constant [ integer GNUPG_SIG_MODE_DETACH ] { 1 }
    Constant [ integer GNUPG_SIG_MODE_CLEAR ] { 2 }
    Constant [ integer GNUPG_VALIDITY_UNKNOWN ] { 0 }
    Constant [ integer GNUPG_VALIDITY_UNDEFINED ] { 1 }
    Constant [ integer GNUPG_VALIDITY_NEVER ] { 2 }
    Constant [ integer GNUPG_VALIDITY_MARGINAL ] { 3 }
    Constant [ integer GNUPG_VALIDITY_FULL ] { 4 }
    Constant [ integer GNUPG_VALIDITY_ULTIMATE ] { 5 }
    Constant [ integer GNUPG_PROTOCOL_OpenPGP ] { 0 }
    Constant [ integer GNUPG_PROTOCOL_CMS ] { 1 }
    Constant [ integer GNUPG_SIGSUM_VALID ] { 1 }
    Constant [ integer GNUPG_SIGSUM_GREEN ] { 2 }
    Constant [ integer GNUPG_SIGSUM_RED ] { 4 }
    Constant [ integer GNUPG_SIGSUM_KEY_REVOKED ] { 16 }
    Constant [ integer GNUPG_SIGSUM_KEY_EXPIRED ] { 32 }
    Constant [ integer GNUPG_SIGSUM_SIG_EXPIRED ] { 64 }
    Constant [ integer GNUPG_SIGSUM_KEY_MISSING ] { 128 }
    Constant [ integer GNUPG_SIGSUM_CRL_MISSING ] { 256 }
    Constant [ integer GNUPG_SIGSUM_CRL_TOO_OLD ] { 512 }
    Constant [ integer GNUPG_SIGSUM_BAD_POLICY ] { 1024 }
    Constant [ integer GNUPG_SIGSUM_SYS_ERROR ] { 2048 }
    Constant [ integer GNUPG_ERROR_WARNING ] { 1 }
    Constant [ integer GNUPG_ERROR_EXCEPTION ] { 2 }
    Constant [ integer GNUPG_ERROR_SILENT ] { 3 }
  }

  - Functions {
    Function [ <internal:gnupg> function gnupg_init ] {
    }
    Function [ <internal:gnupg> function gnupg_keyinfo ] {
    }
    Function [ <internal:gnupg> function gnupg_sign ] {
    }
    Function [ <internal:gnupg> function gnupg_verify ] {

      - Parameters [4] {
        Parameter #0 [ <required> $res ]
        Parameter #1 [ <required> $text ]
        Parameter #2 [ <required> $signature ]
        Parameter #3 [ <optional> &$plaintext ]
      }
    }
    Function [ <internal:gnupg> function gnupg_clearsignkeys ] {
    }
    Function [ <internal:gnupg> function gnupg_clearencryptkeys ] {
    }
    Function [ <internal:gnupg> function gnupg_cleardecryptkeys ] {
    }
    Function [ <internal:gnupg> function gnupg_setarmor ] {
    }
    Function [ <internal:gnupg> function gnupg_encrypt ] {
    }
    Function [ <internal:gnupg> function gnupg_decrypt ] {
    }
    Function [ <internal:gnupg> function gnupg_export ] {
    }
    Function [ <internal:gnupg> function gnupg_import ] {
    }
    Function [ <internal:gnupg> function gnupg_getprotocol ] {
    }
    Function [ <internal:gnupg> function gnupg_setsignmode ] {
    }
    Function [ <internal:gnupg> function gnupg_encryptsign ] {
    }
    Function [ <internal:gnupg> function gnupg_decryptverify ] {

      - Parameters [3] {
        Parameter #0 [ <required> $res ]
        Parameter #1 [ <required> $enctext ]
        Parameter #2 [ <required> &$plaintext ]
      }
    }
    Function [ <internal:gnupg> function gnupg_geterror ] {
    }
    Function [ <internal:gnupg> function gnupg_addsignkey ] {
    }
    Function [ <internal:gnupg> function gnupg_addencryptkey ] {
    }
    Function [ <internal:gnupg> function gnupg_adddecryptkey ] {
    }
    Function [ <internal:gnupg> function gnupg_deletekey ] {
    }
    Function [ <internal:gnupg> function gnupg_gettrustlist ] {
    }
    Function [ <internal:gnupg> function gnupg_listsignatures ] {
    }
    Function [ <internal:gnupg> function gnupg_seterrormode ] {
    }
  }

  - Classes [2] {
    Class [ <internal:gnupg> class gnupg ] {

      - Constants [25] {
        Constant [ integer SIG_MODE_NORMAL ] { 0 }
        Constant [ integer SIG_MODE_DETACH ] { 1 }
        Constant [ integer SIG_MODE_CLEAR ] { 2 }
        Constant [ integer VALIDITY_UNKNOWN ] { 0 }
        Constant [ integer VALIDITY_UNDEFINED ] { 1 }
        Constant [ integer VALIDITY_NEVER ] { 2 }
        Constant [ integer VALIDITY_MARGINAL ] { 3 }
        Constant [ integer VALIDITY_FULL ] { 4 }
        Constant [ integer VALIDITY_ULTIMATE ] { 5 }
        Constant [ integer PROTOCOL_OpenPGP ] { 0 }
        Constant [ integer PROTOCOL_CMS ] { 1 }
        Constant [ integer SIGSUM_VALID ] { 1 }
        Constant [ integer SIGSUM_GREEN ] { 2 }
        Constant [ integer SIGSUM_RED ] { 4 }
        Constant [ integer SIGSUM_KEY_REVOKED ] { 16 }
        Constant [ integer SIGSUM_KEY_EXPIRED ] { 32 }
        Constant [ integer SIGSUM_SIG_EXPIRED ] { 64 }
        Constant [ integer SIGSUM_KEY_MISSING ] { 128 }
        Constant [ integer SIGSUM_CRL_MISSING ] { 256 }
        Constant [ integer SIGSUM_CRL_TOO_OLD ] { 512 }
        Constant [ integer SIGSUM_BAD_POLICY ] { 1024 }
        Constant [ integer SIGSUM_SYS_ERROR ] { 2048 }
        Constant [ integer ERROR_WARNING ] { 1 }
        Constant [ integer ERROR_EXCEPTION ] { 2 }
        Constant [ integer ERROR_SILENT ] { 3 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [23] {
        Method [ <internal:gnupg> public method keyinfo ] {
        }

        Method [ <internal:gnupg> public method verify ] {

          - Parameters [3] {
            Parameter #0 [ <required> $text ]
            Parameter #1 [ <required> $signature ]
            Parameter #2 [ <optional> &$plaintext ]
          }
        }

        Method [ <internal:gnupg> public method geterror ] {
        }

        Method [ <internal:gnupg> public method clearsignkeys ] {
        }

        Method [ <internal:gnupg> public method clearencryptkeys ] {
        }

        Method [ <internal:gnupg> public method cleardecryptkeys ] {
        }

        Method [ <internal:gnupg> public method setarmor ] {
        }

        Method [ <internal:gnupg> public method encrypt ] {
        }

        Method [ <internal:gnupg> public method decrypt ] {
        }

        Method [ <internal:gnupg> public method export ] {
        }

        Method [ <internal:gnupg> public method import ] {
        }

        Method [ <internal:gnupg> public method getprotocol ] {
        }

        Method [ <internal:gnupg> public method setsignmode ] {
        }

        Method [ <internal:gnupg> public method sign ] {
        }

        Method [ <internal:gnupg> public method encryptsign ] {
        }

        Method [ <internal:gnupg> public method decryptverify ] {

          - Parameters [2] {
            Parameter #0 [ <required> $enctext ]
            Parameter #1 [ <required> &$plaintext ]
          }
        }

        Method [ <internal:gnupg> public method addsignkey ] {
        }

        Method [ <internal:gnupg> public method addencryptkey ] {
        }

        Method [ <internal:gnupg> public method adddecryptkey ] {
        }

        Method [ <internal:gnupg> public method deletekey ] {
        }

        Method [ <internal:gnupg> public method gettrustlist ] {
        }

        Method [ <internal:gnupg> public method listsignatures ] {
        }

        Method [ <internal:gnupg> public method seterrormode ] {
        }
      }
    }

    Class [ <internal:gnupg> <iterateable> class gnupg_keylistiterator implements Iterator, Traversable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:gnupg, ctor> public method __construct ] {
        }

        Method [ <internal:gnupg, prototype Iterator> public method current ] {
        }

        Method [ <internal:gnupg, prototype Iterator> public method key ] {
        }

        Method [ <internal:gnupg, prototype Iterator> public method next ] {
        }

        Method [ <internal:gnupg, prototype Iterator> public method rewind ] {
        }

        Method [ <internal:gnupg, prototype Iterator> public method valid ] {
        }
      }
    }
  }
}

