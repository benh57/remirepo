Extension [ <persistent> extension #78 crypto version 0.3.0 ] {

  - Classes [17] {
    Class [ <internal:crypto> class Crypto\CryptoException extends Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:crypto> class Crypto\CipherException extends Crypto\CryptoException implements Throwable ] {

      - Constants [30] {
        Constant [ integer ALGORITHM_NOT_FOUND ] { 1 }
        Constant [ integer STATIC_METHOD_NOT_FOUND ] { 2 }
        Constant [ integer STATIC_METHOD_TOO_MANY_ARGS ] { 3 }
        Constant [ integer MODE_NOT_FOUND ] { 4 }
        Constant [ integer MODE_NOT_AVAILABLE ] { 5 }
        Constant [ integer AUTHENTICATION_NOT_SUPPORTED ] { 6 }
        Constant [ integer KEY_LENGTH_INVALID ] { 7 }
        Constant [ integer IV_LENGTH_INVALID ] { 8 }
        Constant [ integer AAD_SETTER_FORBIDDEN ] { 9 }
        Constant [ integer AAD_SETTER_FAILED ] { 10 }
        Constant [ integer AAD_LENGTH_HIGH ] { 11 }
        Constant [ integer TAG_GETTER_FORBIDDEN ] { 12 }
        Constant [ integer TAG_SETTER_FORBIDDEN ] { 13 }
        Constant [ integer TAG_GETTER_FAILED ] { 14 }
        Constant [ integer TAG_SETTER_FAILED ] { 15 }
        Constant [ integer TAG_LENGTH_SETTER_FORBIDDEN ] { 16 }
        Constant [ integer TAG_LENGTH_LOW ] { 17 }
        Constant [ integer TAG_LENGTH_HIGH ] { 18 }
        Constant [ integer TAG_VERIFY_FAILED ] { 19 }
        Constant [ integer INIT_ALG_FAILED ] { 20 }
        Constant [ integer INIT_CTX_FAILED ] { 21 }
        Constant [ integer INIT_ENCRYPT_FORBIDDEN ] { 22 }
        Constant [ integer INIT_DECRYPT_FORBIDDEN ] { 23 }
        Constant [ integer UPDATE_FAILED ] { 24 }
        Constant [ integer UPDATE_ENCRYPT_FORBIDDEN ] { 25 }
        Constant [ integer UPDATE_DECRYPT_FORBIDDEN ] { 26 }
        Constant [ integer FINISH_FAILED ] { 27 }
        Constant [ integer FINISH_ENCRYPT_FORBIDDEN ] { 28 }
        Constant [ integer FINISH_DECRYPT_FORBIDDEN ] { 29 }
        Constant [ integer INPUT_DATA_LENGTH_HIGH ] { 30 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:crypto> class Crypto\Cipher ] {

      - Constants [8] {
        Constant [ integer MODE_ECB ] { 1 }
        Constant [ integer MODE_CBC ] { 2 }
        Constant [ integer MODE_CFB ] { 3 }
        Constant [ integer MODE_OFB ] { 4 }
        Constant [ integer MODE_CTR ] { 5 }
        Constant [ integer MODE_GCM ] { 6 }
        Constant [ integer MODE_CCM ] { 7 }
        Constant [ integer MODE_XTS ] { 65537 }
      }

      - Static properties [0] {
      }

      - Static methods [4] {
        Method [ <internal:crypto> static public method getAlgorithms ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $aliases ]
            Parameter #1 [ <optional> $prefix ]
          }
        }

        Method [ <internal:crypto> static public method hasAlgorithm ] {

          - Parameters [1] {
            Parameter #0 [ <required> $algorithm ]
          }
        }

        Method [ <internal:crypto> static public method hasMode ] {

          - Parameters [1] {
            Parameter #0 [ <required> $mode ]
          }
        }

        Method [ <internal:crypto> static public method __callStatic ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $arguments ]
          }
        }
      }

      - Properties [1] {
        Property [ <default> protected $algorithm ]
      }

      - Methods [18] {
        Method [ <internal:crypto, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $algorithm ]
            Parameter #1 [ <optional> $mode ]
            Parameter #2 [ <optional> $key_size ]
          }
        }

        Method [ <internal:crypto> public method getAlgorithmName ] {
        }

        Method [ <internal:crypto> public method encryptInit ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <optional> $iv ]
          }
        }

        Method [ <internal:crypto> public method encryptUpdate ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:crypto> public method encryptFinish ] {
        }

        Method [ <internal:crypto> public method encrypt ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <required> $key ]
            Parameter #2 [ <optional> $iv ]
          }
        }

        Method [ <internal:crypto> public method decryptInit ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <optional> $iv ]
          }
        }

        Method [ <internal:crypto> public method decryptUpdate ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:crypto> public method decryptFinish ] {
        }

        Method [ <internal:crypto> public method decrypt ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <required> $key ]
            Parameter #2 [ <optional> $iv ]
          }
        }

        Method [ <internal:crypto> public method getBlockSize ] {
        }

        Method [ <internal:crypto> public method getKeyLength ] {
        }

        Method [ <internal:crypto> public method getIVLength ] {
        }

        Method [ <internal:crypto> public method getMode ] {
        }

        Method [ <internal:crypto> public method getTag ] {
        }

        Method [ <internal:crypto> public method setTag ] {

          - Parameters [1] {
            Parameter #0 [ <required> $tag ]
          }
        }

        Method [ <internal:crypto> public method setTagLength ] {

          - Parameters [1] {
            Parameter #0 [ <required> $tag_length ]
          }
        }

        Method [ <internal:crypto> public method setAAD ] {

          - Parameters [1] {
            Parameter #0 [ <required> $aad ]
          }
        }
      }
    }

    Class [ <internal:crypto> class Crypto\Hash ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [3] {
        Method [ <internal:crypto> static public method getAlgorithms ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $aliases ]
            Parameter #1 [ <optional> $prefix ]
          }
        }

        Method [ <internal:crypto> static public method hasAlgorithm ] {

          - Parameters [1] {
            Parameter #0 [ <required> $algorithm ]
          }
        }

        Method [ <internal:crypto> static public method __callStatic ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $arguments ]
          }
        }
      }

      - Properties [1] {
        Property [ <default> protected $algorithm ]
      }

      - Methods [7] {
        Method [ <internal:crypto, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $algorithm ]
          }
        }

        Method [ <internal:crypto> public method update ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:crypto> public method getAlgorithmName ] {
        }

        Method [ <internal:crypto> public method digest ] {
        }

        Method [ <internal:crypto> public method hexdigest ] {
        }

        Method [ <internal:crypto> public method getSize ] {
        }

        Method [ <internal:crypto> public method getBlockSize ] {
        }
      }
    }

    Class [ <internal:crypto> class Crypto\HashException extends Crypto\CryptoException implements Throwable ] {

      - Constants [7] {
        Constant [ integer HASH_ALGORITHM_NOT_FOUND ] { 1 }
        Constant [ integer STATIC_METHOD_NOT_FOUND ] { 2 }
        Constant [ integer STATIC_METHOD_TOO_MANY_ARGS ] { 3 }
        Constant [ integer INIT_FAILED ] { 4 }
        Constant [ integer UPDATE_FAILED ] { 5 }
        Constant [ integer DIGEST_FAILED ] { 6 }
        Constant [ integer INPUT_DATA_LENGTH_HIGH ] { 7 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:crypto> abstract class Crypto\MAC extends Crypto\Hash ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [3] {
        Method [ <internal:crypto, inherits Crypto\Hash> static public method getAlgorithms ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $aliases ]
            Parameter #1 [ <optional> $prefix ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\Hash> static public method hasAlgorithm ] {

          - Parameters [1] {
            Parameter #0 [ <required> $algorithm ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\Hash> static public method __callStatic ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $arguments ]
          }
        }
      }

      - Properties [1] {
        Property [ <default> protected $algorithm ]
      }

      - Methods [7] {
        Method [ <internal:crypto, overwrites Crypto\Hash, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> $algorithm ]
            Parameter #1 [ <required> $key ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method update ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method getAlgorithmName ] {
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method digest ] {
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method hexdigest ] {
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method getSize ] {
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method getBlockSize ] {
        }
      }
    }

    Class [ <internal:crypto> class Crypto\MACException extends Crypto\HashException implements Throwable ] {

      - Constants [9] {
        Constant [ integer HASH_ALGORITHM_NOT_FOUND ] { 1 }
        Constant [ integer STATIC_METHOD_NOT_FOUND ] { 2 }
        Constant [ integer STATIC_METHOD_TOO_MANY_ARGS ] { 3 }
        Constant [ integer INIT_FAILED ] { 4 }
        Constant [ integer UPDATE_FAILED ] { 5 }
        Constant [ integer DIGEST_FAILED ] { 6 }
        Constant [ integer INPUT_DATA_LENGTH_HIGH ] { 7 }
        Constant [ integer MAC_ALGORITHM_NOT_FOUND ] { 1 }
        Constant [ integer KEY_LENGTH_INVALID ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:crypto> class Crypto\HMAC extends Crypto\MAC ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [3] {
        Method [ <internal:crypto, inherits Crypto\Hash> static public method getAlgorithms ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $aliases ]
            Parameter #1 [ <optional> $prefix ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\Hash> static public method hasAlgorithm ] {

          - Parameters [1] {
            Parameter #0 [ <required> $algorithm ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\Hash> static public method __callStatic ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $arguments ]
          }
        }
      }

      - Properties [1] {
        Property [ <default> protected $algorithm ]
      }

      - Methods [7] {
        Method [ <internal:crypto, inherits Crypto\MAC, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> $algorithm ]
            Parameter #1 [ <required> $key ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method update ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method getAlgorithmName ] {
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method digest ] {
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method hexdigest ] {
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method getSize ] {
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method getBlockSize ] {
        }
      }
    }

    Class [ <internal:crypto> class Crypto\CMAC extends Crypto\MAC ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [3] {
        Method [ <internal:crypto, inherits Crypto\Hash> static public method getAlgorithms ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $aliases ]
            Parameter #1 [ <optional> $prefix ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\Hash> static public method hasAlgorithm ] {

          - Parameters [1] {
            Parameter #0 [ <required> $algorithm ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\Hash> static public method __callStatic ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $arguments ]
          }
        }
      }

      - Properties [1] {
        Property [ <default> protected $algorithm ]
      }

      - Methods [7] {
        Method [ <internal:crypto, inherits Crypto\MAC, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> $algorithm ]
            Parameter #1 [ <required> $key ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method update ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method getAlgorithmName ] {
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method digest ] {
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method hexdigest ] {
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method getSize ] {
        }

        Method [ <internal:crypto, inherits Crypto\Hash> public method getBlockSize ] {
        }
      }
    }

    Class [ <internal:crypto> class Crypto\Base64 ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:crypto> static public method encode ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:crypto> static public method decode ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:crypto, ctor> public method __construct ] {
        }

        Method [ <internal:crypto> public method encodeUpdate ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:crypto> public method encodeFinish ] {
        }

        Method [ <internal:crypto> public method decodeUpdate ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:crypto> public method decodeFinish ] {
        }
      }
    }

    Class [ <internal:crypto> class Crypto\Base64Exception extends Crypto\CryptoException implements Throwable ] {

      - Constants [6] {
        Constant [ integer ENCODE_UPDATE_FORBIDDEN ] { 1 }
        Constant [ integer ENCODE_FINISH_FORBIDDEN ] { 2 }
        Constant [ integer DECODE_UPDATE_FORBIDDEN ] { 3 }
        Constant [ integer DECODE_FINISH_FORBIDDEN ] { 4 }
        Constant [ integer DECODE_UPDATE_FAILED ] { 5 }
        Constant [ integer INPUT_DATA_LENGTH_HIGH ] { 6 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:crypto> class Crypto\Rand ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [5] {
        Method [ <internal:crypto> static public method generate ] {

          - Parameters [3] {
            Parameter #0 [ <required> $num ]
            Parameter #1 [ <optional> $must_be_strong ]
            Parameter #2 [ <optional> &$returned_strong_result ]
          }
        }

        Method [ <internal:crypto> static public method seed ] {

          - Parameters [2] {
            Parameter #0 [ <required> $buf ]
            Parameter #1 [ <optional> $entropy ]
          }
        }

        Method [ <internal:crypto> static public method cleanup ] {
        }

        Method [ <internal:crypto> static public method loadFile ] {

          - Parameters [2] {
            Parameter #0 [ <required> $filename ]
            Parameter #1 [ <optional> $max_bytes ]
          }
        }

        Method [ <internal:crypto> static public method writeFile ] {

          - Parameters [1] {
            Parameter #0 [ <required> $filename ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:crypto> class Crypto\RandException extends Crypto\CryptoException implements Throwable ] {

      - Constants [4] {
        Constant [ integer GENERATE_PREDICTABLE ] { 1 }
        Constant [ integer FILE_WRITE_PREDICTABLE ] { 2 }
        Constant [ integer REQUESTED_BYTES_NUMBER_TOO_HIGH ] { 3 }
        Constant [ integer SEED_LENGTH_TOO_HIGH ] { 4 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:crypto> abstract class Crypto\KDF ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:crypto, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> $length ]
            Parameter #1 [ <optional> $salt ]
          }
        }

        Method [ <internal:crypto> abstract public method derive ] {

          - Parameters [1] {
            Parameter #0 [ <required> $password ]
          }
        }

        Method [ <internal:crypto> public method getLength ] {
        }

        Method [ <internal:crypto> public method setLength ] {

          - Parameters [1] {
            Parameter #0 [ <required> $length ]
          }
        }

        Method [ <internal:crypto> public method getSalt ] {
        }

        Method [ <internal:crypto> public method setSalt ] {

          - Parameters [1] {
            Parameter #0 [ <required> $salt ]
          }
        }
      }
    }

    Class [ <internal:crypto> class Crypto\KDFException extends Crypto\CryptoException implements Throwable ] {

      - Constants [5] {
        Constant [ integer KEY_LENGTH_LOW ] { 1 }
        Constant [ integer KEY_LENGTH_HIGH ] { 2 }
        Constant [ integer SALT_LENGTH_HIGH ] { 3 }
        Constant [ integer PASSWORD_LENGTH_INVALID ] { 4 }
        Constant [ integer DERIVATION_FAILED ] { 5 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:crypto> class Crypto\PBKDF2 extends Crypto\KDF ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [10] {
        Method [ <internal:crypto, overwrites Crypto\KDF, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $hashAlgorithm ]
            Parameter #1 [ <required> $length ]
            Parameter #2 [ <optional> $salt ]
            Parameter #3 [ <optional> $iterations ]
          }
        }

        Method [ <internal:crypto, overwrites Crypto\KDF, prototype Crypto\KDF> public method derive ] {

          - Parameters [1] {
            Parameter #0 [ <required> $password ]
          }
        }

        Method [ <internal:crypto> public method getIterations ] {
        }

        Method [ <internal:crypto> public method setIterations ] {

          - Parameters [1] {
            Parameter #0 [ <required> $iterations ]
          }
        }

        Method [ <internal:crypto> public method getHashAlgorithm ] {
        }

        Method [ <internal:crypto> public method setHashAlgorithm ] {

          - Parameters [1] {
            Parameter #0 [ <required> $hashAlgorithm ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\KDF> public method getLength ] {
        }

        Method [ <internal:crypto, inherits Crypto\KDF> public method setLength ] {

          - Parameters [1] {
            Parameter #0 [ <required> $length ]
          }
        }

        Method [ <internal:crypto, inherits Crypto\KDF> public method getSalt ] {
        }

        Method [ <internal:crypto, inherits Crypto\KDF> public method setSalt ] {

          - Parameters [1] {
            Parameter #0 [ <required> $salt ]
          }
        }
      }
    }

    Class [ <internal:crypto> class Crypto\PBKDF2Exception extends Crypto\KDFException implements Throwable ] {

      - Constants [7] {
        Constant [ integer KEY_LENGTH_LOW ] { 1 }
        Constant [ integer KEY_LENGTH_HIGH ] { 2 }
        Constant [ integer SALT_LENGTH_HIGH ] { 3 }
        Constant [ integer PASSWORD_LENGTH_INVALID ] { 4 }
        Constant [ integer DERIVATION_FAILED ] { 5 }
        Constant [ integer HASH_ALGORITHM_NOT_FOUND ] { 1 }
        Constant [ integer ITERATIONS_HIGH ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }
  }
}

