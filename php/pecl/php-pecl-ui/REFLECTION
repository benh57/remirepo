Extension [ <persistent> extension #157 ui version 2.0.0 ] {

  - Constants [2] {
    Constant [ integer UI\Loop ] { 1 }
    Constant [ integer UI\Wait ] { 2 }
  }

  - Functions {
    Function [ <internal:ui> function UI\run ] {

      - Parameters [1] {
        Parameter #0 [ <optional> integer $flags ]
      }
    }
    Function [ <internal:ui> function UI\quit ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:ui> function UI\Draw\Text\Font\fontFamilies ] {

      - Parameters [0] {
      }
    }
  }

  - Classes [47] {
    Class [ <internal:ui> class UI\Exception\InvalidArgumentException extends InvalidArgumentException implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:ui> class UI\Exception\RuntimeException extends RuntimeException implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:ui> abstract class UI\Executor ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [4] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <optional> integer $seconds ]
            Parameter #1 [ <optional> integer $microseconds ]
          }
        }

        Method [ <internal:ui> public method setInterval ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $seconds ]
            Parameter #1 [ <optional> integer $microseconds ]
          }
        }

        Method [ <internal:ui> public method kill ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> abstract protected method onExecute ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> final class UI\Point ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ui> static public method at ] {
        }
      }

      - Properties [2] {
        Property [ <default> public $x ]
        Property [ <default> public $y ]
      }

      - Methods [5] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> float $x ]
            Parameter #1 [ <required> float $y ]
          }
        }

        Method [ <internal:ui> public method getX ] {

          - Parameters [0] {
          }
          - Return [ float ]
        }

        Method [ <internal:ui> public method getY ] {

          - Parameters [0] {
          }
          - Return [ float ]
        }

        Method [ <internal:ui> public method setX ] {

          - Parameters [1] {
            Parameter #0 [ <required> float $point ]
          }
        }

        Method [ <internal:ui> public method setY ] {

          - Parameters [1] {
            Parameter #0 [ <required> float $point ]
          }
        }
      }
    }

    Class [ <internal:ui> final class UI\Size ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:ui> static public method of ] {
        }
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> float $width ]
            Parameter #1 [ <required> float $height ]
          }
        }

        Method [ <internal:ui> public method getWidth ] {

          - Parameters [0] {
          }
          - Return [ float ]
        }

        Method [ <internal:ui> public method getHeight ] {

          - Parameters [0] {
          }
          - Return [ float ]
        }

        Method [ <internal:ui> public method setWidth ] {

          - Parameters [1] {
            Parameter #0 [ <required> float $size ]
          }
        }

        Method [ <internal:ui> public method setHeight ] {

          - Parameters [1] {
            Parameter #0 [ <required> float $size ]
          }
        }
      }
    }

    Class [ <internal:ui> final class UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [10] {
        Method [ <internal:ui> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Window extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> protected $controls ]
      }

      - Methods [27] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> string $title ]
            Parameter #1 [ <required> UI\Size $size ]
            Parameter #2 [ <optional> boolean $menu ]
          }
        }

        Method [ <internal:ui> public method setTitle ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $title ]
          }
        }

        Method [ <internal:ui> public method getTitle ] {

          - Parameters [0] {
          }
          - Return [ string ]
        }

        Method [ <internal:ui> public method setSize ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Size $size ]
          }
        }

        Method [ <internal:ui> public method getSize ] {

          - Parameters [0] {
          }
          - Return [ UI\Size ]
        }

        Method [ <internal:ui> public method setFullScreen ] {

          - Parameters [1] {
            Parameter #0 [ <required> boolean $full ]
          }
        }

        Method [ <internal:ui> public method isFullScreen ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> public method setBorders ] {

          - Parameters [1] {
            Parameter #0 [ <required> boolean $borders ]
          }
        }

        Method [ <internal:ui> public method hasBorders ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> public method setMargin ] {

          - Parameters [1] {
            Parameter #0 [ <required> boolean $margin ]
          }
        }

        Method [ <internal:ui> public method hasMargin ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $control ]
          }
        }

        Method [ <internal:ui> public method msg ] {

          - Parameters [2] {
            Parameter #0 [ <required> string $title ]
            Parameter #1 [ <required> string $msg ]
          }
        }

        Method [ <internal:ui> public method error ] {

          - Parameters [2] {
            Parameter #0 [ <required> string $title ]
            Parameter #1 [ <required> string $msg ]
          }
        }

        Method [ <internal:ui> public method open ] {

          - Parameters [0] {
          }
          - Return [ string or NULL ]
        }

        Method [ <internal:ui> public method save ] {

          - Parameters [0] {
          }
          - Return [ string or NULL ]
        }

        Method [ <internal:ui> protected method onClosing ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Form extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> protected $controls ]
      }

      - Methods [14] {
        Method [ <internal:ui> public method setPadded ] {

          - Parameters [1] {
            Parameter #0 [ <required> boolean $padded ]
          }
        }

        Method [ <internal:ui> public method isPadded ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> public method append ] {

          - Parameters [3] {
            Parameter #0 [ <required> string $label ]
            Parameter #1 [ <required> UI\Control $control ]
            Parameter #2 [ <optional> boolean $stretchy ]
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method delete ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $index ]
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Grid extends UI\Control ] {

      - Constants [8] {
        Constant [ integer Fill ] { 0 }
        Constant [ integer Start ] { 1 }
        Constant [ integer Center ] { 2 }
        Constant [ integer End ] { 3 }
        Constant [ integer Leading ] { 0 }
        Constant [ integer Top ] { 1 }
        Constant [ integer Trailing ] { 2 }
        Constant [ integer Bottom ] { 3 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> protected $controls ]
      }

      - Methods [13] {
        Method [ <internal:ui> public method setPadded ] {

          - Parameters [1] {
            Parameter #0 [ <required> boolean $text ]
          }
        }

        Method [ <internal:ui> public method isPadded ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> public method append ] {

          - Parameters [9] {
            Parameter #0 [ <required> UI\Control $control ]
            Parameter #1 [ <required> integer $left ]
            Parameter #2 [ <required> integer $top ]
            Parameter #3 [ <required> integer $xspan ]
            Parameter #4 [ <required> integer $yspan ]
            Parameter #5 [ <required> boolean $hexpand ]
            Parameter #6 [ <required> integer $halign ]
            Parameter #7 [ <required> boolean $vexpand ]
            Parameter #8 [ <required> integer $valign ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Tab extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> protected $controls ]
      }

      - Methods [16] {
        Method [ <internal:ui> public method append ] {

          - Parameters [2] {
            Parameter #0 [ <required> string $name ]
            Parameter #1 [ <required> UI\Control $control ]
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method delete ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $index ]
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> public method pages ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method insertAt ] {

          - Parameters [3] {
            Parameter #0 [ <required> string $name ]
            Parameter #1 [ <required> boolean $before ]
            Parameter #2 [ <required> UI\Control $control ]
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method setMargin ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $page ]
            Parameter #1 [ <required> boolean $margin ]
          }
        }

        Method [ <internal:ui> public method hasMargin ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $page ]
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Box extends UI\Control ] {

      - Constants [2] {
        Constant [ integer Vertical ] { 2 }
        Constant [ integer Horizontal ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> protected $controls ]
      }

      - Methods [16] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> integer $orientation ]
          }
        }

        Method [ <internal:ui> public method getOrientation ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> public method append ] {

          - Parameters [2] {
            Parameter #0 [ <required> UI\Control $control ]
            Parameter #1 [ <optional> boolean $stretchy ]
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method delete ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $index ]
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> public method setPadded ] {

          - Parameters [1] {
            Parameter #0 [ <required> boolean $padded ]
          }
        }

        Method [ <internal:ui> public method isPadded ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Check extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [16] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $text ]
          }
        }

        Method [ <internal:ui> public method setText ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $checked ]
          }
        }

        Method [ <internal:ui> public method getText ] {

          - Parameters [0] {
          }
          - Return [ string ]
        }

        Method [ <internal:ui> public method setChecked ] {

          - Parameters [1] {
            Parameter #0 [ <required> boolean $checked ]
          }
        }

        Method [ <internal:ui> public method isChecked ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> protected method onToggle ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Button extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $text ]
          }
        }

        Method [ <internal:ui> public method setText ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $text ]
          }
        }

        Method [ <internal:ui> public method getText ] {

          - Parameters [0] {
          }
          - Return [ string ]
        }

        Method [ <internal:ui> protected method onClick ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\ColorButton extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [13] {
        Method [ <internal:ui> public method setColor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:ui> public method getColor ] {

          - Parameters [0] {
          }
          - Return [ UI\Draw\Color ]
        }

        Method [ <internal:ui> protected method onChange ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Label extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [13] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $text ]
          }
        }

        Method [ <internal:ui> public method setText ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $text ]
          }
        }

        Method [ <internal:ui> public method getText ] {

          - Parameters [0] {
          }
          - Return [ string ]
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Entry extends UI\Control ] {

      - Constants [3] {
        Constant [ integer Normal ] { 1 }
        Constant [ integer Password ] { 2 }
        Constant [ integer Search ] { 3 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [16] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> integer $type ]
          }
        }

        Method [ <internal:ui> public method setText ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $text ]
          }
        }

        Method [ <internal:ui> public method getText ] {

          - Parameters [0] {
          }
          - Return [ string ]
        }

        Method [ <internal:ui> public method setReadOnly ] {

          - Parameters [1] {
            Parameter #0 [ <required> boolean $readOnly ]
          }
        }

        Method [ <internal:ui> public method isReadOnly ] {
        }

        Method [ <internal:ui> protected method onChange ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\MultilineEntry extends UI\Control ] {

      - Constants [2] {
        Constant [ integer Wrap ] { 1 }
        Constant [ integer NoWrap ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [17] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> integer $type ]
          }
        }

        Method [ <internal:ui> public method setText ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $text ]
          }
        }

        Method [ <internal:ui> public method getText ] {

          - Parameters [0] {
          }
          - Return [ string ]
        }

        Method [ <internal:ui> public method append ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $text ]
          }
        }

        Method [ <internal:ui> public method setReadOnly ] {

          - Parameters [1] {
            Parameter #0 [ <required> boolean $readOnly ]
          }
        }

        Method [ <internal:ui> public method isReadOnly ] {
        }

        Method [ <internal:ui> protected method onChange ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Group extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> protected $controls ]
      }

      - Methods [16] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $title ]
          }
        }

        Method [ <internal:ui> public method setTitle ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $title ]
          }
        }

        Method [ <internal:ui> public method getTitle ] {

          - Parameters [0] {
          }
          - Return [ string ]
        }

        Method [ <internal:ui> public method setMargin ] {

          - Parameters [1] {
            Parameter #0 [ <required> boolean $margin ]
          }
        }

        Method [ <internal:ui> public method hasMargin ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> public method append ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $control ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Spin extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $min ]
            Parameter #1 [ <required> integer $max ]
          }
        }

        Method [ <internal:ui> public method setValue ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $text ]
          }
        }

        Method [ <internal:ui> public method getValue ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> protected method onChange ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Slider extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $min ]
            Parameter #1 [ <required> integer $max ]
          }
        }

        Method [ <internal:ui> public method setValue ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $text ]
          }
        }

        Method [ <internal:ui> public method getValue ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> protected method onChange ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Progress extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [12] {
        Method [ <internal:ui> public method setValue ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $value ]
          }
        }

        Method [ <internal:ui> public method getValue ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Separator extends UI\Control ] {

      - Constants [2] {
        Constant [ integer Horizontal ] { 1 }
        Constant [ integer Vertical ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [11] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> integer $type ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Combo extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:ui> public method setSelected ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $text ]
          }
        }

        Method [ <internal:ui> public method getSelected ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method append ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $text ]
          }
        }

        Method [ <internal:ui> protected method onSelected ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\EditableCombo extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:ui> public method setText ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $text ]
          }
        }

        Method [ <internal:ui> public method getText ] {

          - Parameters [0] {
          }
          - Return [ string ]
        }

        Method [ <internal:ui> public method append ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $text ]
          }
        }

        Method [ <internal:ui> protected method onChange ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Radio extends UI\Control ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:ui> public method setSelected ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $text ]
          }
        }

        Method [ <internal:ui> public method getSelected ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method append ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $text ]
          }
        }

        Method [ <internal:ui> protected method onSelected ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Controls\Picker extends UI\Control ] {

      - Constants [3] {
        Constant [ integer Date ] { 1 }
        Constant [ integer Time ] { 2 }
        Constant [ integer DateTime ] { 3 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [11] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> integer $type ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Menu ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> string $name ]
          }
        }

        Method [ <internal:ui> public method append ] {

          - Parameters [2] {
            Parameter #0 [ <optional> string $name ]
            Parameter #1 [ <optional> string $type ]
          }
          - Return [ UI\MenuItem or NULL ]
        }

        Method [ <internal:ui> public method appendCheck ] {

          - Parameters [2] {
            Parameter #0 [ <optional> string $name ]
            Parameter #1 [ <optional> string $type ]
          }
          - Return [ UI\MenuItem or NULL ]
        }

        Method [ <internal:ui> public method appendQuit ] {

          - Parameters [1] {
            Parameter #0 [ <optional> string $type ]
          }
          - Return [ UI\MenuItem ]
        }

        Method [ <internal:ui> public method appendPreferences ] {

          - Parameters [1] {
            Parameter #0 [ <optional> string $type ]
          }
          - Return [ UI\MenuItem ]
        }

        Method [ <internal:ui> public method appendAbout ] {

          - Parameters [1] {
            Parameter #0 [ <optional> string $type ]
          }
          - Return [ UI\MenuItem ]
        }

        Method [ <internal:ui> public method appendSeparator ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\MenuItem ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:ui> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui> public method isChecked ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui> public method setChecked ] {

          - Parameters [1] {
            Parameter #0 [ <required> boolean $checked ]
          }
        }

        Method [ <internal:ui> protected method onClick ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Area extends UI\Control ] {

      - Constants [6] {
        Constant [ integer Ctrl ] { 1 }
        Constant [ integer Alt ] { 2 }
        Constant [ integer Shift ] { 4 }
        Constant [ integer Super ] { 8 }
        Constant [ integer Down ] { 32 }
        Constant [ integer Up ] { 16 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [16] {
        Method [ <internal:ui> public method redraw ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui> public method setSize ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Size $size ]
          }
        }

        Method [ <internal:ui> public method scrollTo ] {

          - Parameters [2] {
            Parameter #0 [ <required> UI\Point $point ]
            Parameter #1 [ <required> UI\Size $size ]
          }
        }

        Method [ <internal:ui> protected method onDraw ] {

          - Parameters [4] {
            Parameter #0 [ <required> UI\Draw\Pen $pen ]
            Parameter #1 [ <required> UI\Size $areaSize ]
            Parameter #2 [ <required> UI\Point $clipPoint ]
            Parameter #3 [ <required> UI\Size $clipSize ]
          }
        }

        Method [ <internal:ui> protected method onMouse ] {

          - Parameters [3] {
            Parameter #0 [ <required> UI\Point $areaPoint ]
            Parameter #1 [ <required> UI\Size $areaSize ]
            Parameter #2 [ <required> integer $flags ]
          }
        }

        Method [ <internal:ui> protected method onKey ] {

          - Parameters [3] {
            Parameter #0 [ <required> string $key ]
            Parameter #1 [ <required> integer $ext ]
            Parameter #2 [ <required> integer $flags ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getParent ] {

          - Parameters [0] {
          }
          - Return [ UI\Control or NULL ]
        }

        Method [ <internal:ui, inherits UI\Control> public method setParent ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Control $parent ]
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method getTopLevel ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Control> public method isVisible ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method show ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method hide ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method isEnabled ] {

          - Parameters [0] {
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Control> public method enable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method disable ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui, inherits UI\Control> public method destroy ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> final class UI\Key ] {

      - Constants [39] {
        Constant [ integer Escape ] { 1 }
        Constant [ integer Insert ] { 2 }
        Constant [ integer Delete ] { 3 }
        Constant [ integer Home ] { 4 }
        Constant [ integer End ] { 5 }
        Constant [ integer PageUp ] { 6 }
        Constant [ integer PageDown ] { 7 }
        Constant [ integer Up ] { 8 }
        Constant [ integer Down ] { 9 }
        Constant [ integer Left ] { 10 }
        Constant [ integer Right ] { 11 }
        Constant [ integer F1 ] { 12 }
        Constant [ integer F2 ] { 13 }
        Constant [ integer F3 ] { 14 }
        Constant [ integer F4 ] { 15 }
        Constant [ integer F5 ] { 16 }
        Constant [ integer F6 ] { 17 }
        Constant [ integer F7 ] { 18 }
        Constant [ integer F8 ] { 19 }
        Constant [ integer F9 ] { 20 }
        Constant [ integer F10 ] { 21 }
        Constant [ integer F11 ] { 22 }
        Constant [ integer F12 ] { 23 }
        Constant [ integer N0 ] { 24 }
        Constant [ integer N1 ] { 25 }
        Constant [ integer N2 ] { 26 }
        Constant [ integer N3 ] { 27 }
        Constant [ integer N4 ] { 28 }
        Constant [ integer N5 ] { 29 }
        Constant [ integer N6 ] { 30 }
        Constant [ integer N7 ] { 31 }
        Constant [ integer N8 ] { 32 }
        Constant [ integer N9 ] { 33 }
        Constant [ integer NDot ] { 34 }
        Constant [ integer NEnter ] { 35 }
        Constant [ integer NAdd ] { 36 }
        Constant [ integer NSubtract ] { 37 }
        Constant [ integer NMultiply ] { 38 }
        Constant [ integer NDivide ] { 39 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:ui> final class UI\Draw\Pen ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:ui> public method fill ] {

          - Parameters [2] {
            Parameter #0 [ <required> UI\Draw\Path $path ]
            Parameter #1 [ <required> $with ]
          }
        }

        Method [ <internal:ui> public method stroke ] {

          - Parameters [3] {
            Parameter #0 [ <required> UI\Draw\Path $path ]
            Parameter #1 [ <required> $with ]
            Parameter #2 [ <required> UI\Draw\Stroke $stroke ]
          }
        }

        Method [ <internal:ui> public method transform ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Draw\Matrix $matrix ]
          }
        }

        Method [ <internal:ui> public method clip ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Draw\Path $path ]
          }
        }

        Method [ <internal:ui> public method save ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui> public method restore ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui> public method write ] {

          - Parameters [2] {
            Parameter #0 [ <required> UI\Point $point ]
            Parameter #1 [ <required> UI\Draw\Text\Layout $layout ]
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Draw\Path ] {

      - Constants [2] {
        Constant [ integer Winding ] { 0 }
        Constant [ integer Alternate ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [9] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> integer $mode ]
          }
        }

        Method [ <internal:ui> public method newFigure ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Point $point ]
          }
        }

        Method [ <internal:ui> public method newFigureWithArc ] {

          - Parameters [5] {
            Parameter #0 [ <required> UI\Point $point ]
            Parameter #1 [ <required> float $radius ]
            Parameter #2 [ <required> float $angle ]
            Parameter #3 [ <required> float $sweep ]
            Parameter #4 [ <required> float $negative ]
          }
        }

        Method [ <internal:ui> public method lineTo ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Point $point ]
          }
        }

        Method [ <internal:ui> public method arcTo ] {

          - Parameters [5] {
            Parameter #0 [ <required> UI\Point $point ]
            Parameter #1 [ <required> float $radius ]
            Parameter #2 [ <required> float $angle ]
            Parameter #3 [ <required> float $sweep ]
            Parameter #4 [ <required> float $negative ]
          }
        }

        Method [ <internal:ui> public method bezierTo ] {

          - Parameters [5] {
            Parameter #0 [ <required> UI\Point $point ]
            Parameter #1 [ <required> float $radius ]
            Parameter #2 [ <required> float $angle ]
            Parameter #3 [ <required> float $sweep ]
            Parameter #4 [ <required> float $negative ]
          }
        }

        Method [ <internal:ui> public method closeFigure ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:ui> public method addRectangle ] {

          - Parameters [2] {
            Parameter #0 [ <required> UI\Point $point ]
            Parameter #1 [ <required> UI\Size $size ]
          }
        }

        Method [ <internal:ui> public method end ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Draw\Color ] {

      - Constants [4] {
        Constant [ integer Red ] { 1 }
        Constant [ integer Green ] { 2 }
        Constant [ integer Blue ] { 3 }
        Constant [ integer Alpha ] { 4 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> public $r ]
        Property [ <default> public $g ]
        Property [ <default> public $b ]
        Property [ <default> public $a ]
      }

      - Methods [3] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $rgba ]
          }
        }

        Method [ <internal:ui> public method setChannel ] {

          - Parameters [2] {
            Parameter #0 [ <required> integer $channel ]
            Parameter #1 [ <required> float $value ]
          }
        }

        Method [ <internal:ui> public method getChannel ] {

          - Parameters [1] {
            Parameter #0 [ <optional> integer $channel ]
          }
          - Return [ float or NULL ]
        }
      }
    }

    Class [ <internal:ui> class UI\Draw\Brush ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:ui> public method setColor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:ui> public method getColor ] {

          - Parameters [0] {
          }
          - Return [ UI\Draw\Color ]
        }
      }
    }

    Class [ <internal:ui> class UI\Draw\Brush\Gradient extends UI\Draw\Brush ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:ui> public method addStop ] {

          - Parameters [2] {
            Parameter #0 [ <required> float $position ]
            Parameter #1 [ <required> $color ]
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method delStop ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $index ]
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method setStop ] {

          - Parameters [3] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <required> float $position ]
            Parameter #2 [ <required> UI\Draw\Color $color ]
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Draw\Brush, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:ui, inherits UI\Draw\Brush> public method setColor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:ui, inherits UI\Draw\Brush> public method getColor ] {

          - Parameters [0] {
          }
          - Return [ UI\Draw\Color ]
        }
      }
    }

    Class [ <internal:ui> class UI\Draw\Brush\LinearGradient extends UI\Draw\Brush\Gradient ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:ui, overwrites UI\Draw\Brush, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> UI\Point $start ]
            Parameter #1 [ <required> UI\Point $end ]
          }
        }

        Method [ <internal:ui, inherits UI\Draw\Brush\Gradient> public method addStop ] {

          - Parameters [2] {
            Parameter #0 [ <required> float $position ]
            Parameter #1 [ <required> $color ]
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Draw\Brush\Gradient> public method delStop ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $index ]
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Draw\Brush\Gradient> public method setStop ] {

          - Parameters [3] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <required> float $position ]
            Parameter #2 [ <required> UI\Draw\Color $color ]
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Draw\Brush> public method setColor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:ui, inherits UI\Draw\Brush> public method getColor ] {

          - Parameters [0] {
          }
          - Return [ UI\Draw\Color ]
        }
      }
    }

    Class [ <internal:ui> class UI\Draw\Brush\RadialGradient extends UI\Draw\Brush\Gradient ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:ui, overwrites UI\Draw\Brush, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> UI\Point $start ]
            Parameter #1 [ <required> UI\Point $outer ]
            Parameter #2 [ <required> float $radius ]
          }
        }

        Method [ <internal:ui, inherits UI\Draw\Brush\Gradient> public method addStop ] {

          - Parameters [2] {
            Parameter #0 [ <required> float $position ]
            Parameter #1 [ <required> $color ]
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Draw\Brush\Gradient> public method delStop ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $index ]
          }
          - Return [ integer ]
        }

        Method [ <internal:ui, inherits UI\Draw\Brush\Gradient> public method setStop ] {

          - Parameters [3] {
            Parameter #0 [ <required> integer $index ]
            Parameter #1 [ <required> float $position ]
            Parameter #2 [ <required> UI\Draw\Color $color ]
          }
          - Return [ boolean ]
        }

        Method [ <internal:ui, inherits UI\Draw\Brush> public method setColor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:ui, inherits UI\Draw\Brush> public method getColor ] {

          - Parameters [0] {
          }
          - Return [ UI\Draw\Color ]
        }
      }
    }

    Class [ <internal:ui> class UI\Draw\Stroke ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [9] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <optional> integer $cap ]
            Parameter #1 [ <optional> integer $join ]
            Parameter #2 [ <optional> float $thickness ]
            Parameter #3 [ <optional> float $miterLimit ]
          }
        }

        Method [ <internal:ui> public method setCap ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $cap ]
          }
        }

        Method [ <internal:ui> public method getCap ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method setJoin ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $join ]
          }
        }

        Method [ <internal:ui> public method getJoin ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method setThickness ] {

          - Parameters [1] {
            Parameter #0 [ <required> float $thickness ]
          }
        }

        Method [ <internal:ui> public method getThickness ] {

          - Parameters [0] {
          }
          - Return [ float ]
        }

        Method [ <internal:ui> public method getMiterLimit ] {

          - Parameters [0] {
          }
          - Return [ float ]
        }

        Method [ <internal:ui> public method setMiterLimit ] {

          - Parameters [1] {
            Parameter #0 [ <required> float $limit ]
          }
        }
      }
    }

    Class [ <internal:ui> final class UI\Draw\Line\Cap ] {

      - Constants [3] {
        Constant [ integer Flat ] { 0 }
        Constant [ integer Round ] { 1 }
        Constant [ integer Square ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:ui> final class UI\Draw\Line\Join ] {

      - Constants [3] {
        Constant [ integer Miter ] { 0 }
        Constant [ integer Round ] { 1 }
        Constant [ integer Bevel ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:ui> class UI\Draw\Matrix ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:ui> public method translate ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Point $point ]
          }
        }

        Method [ <internal:ui> public method scale ] {

          - Parameters [2] {
            Parameter #0 [ <required> UI\Point $center ]
            Parameter #1 [ <required> UI\Point $point ]
          }
        }

        Method [ <internal:ui> public method rotate ] {

          - Parameters [2] {
            Parameter #0 [ <required> UI\Point $point ]
            Parameter #1 [ <required> float $amount ]
          }
        }

        Method [ <internal:ui> public method skew ] {

          - Parameters [2] {
            Parameter #0 [ <required> UI\Point $point ]
            Parameter #1 [ <required> UI\Point $amount ]
          }
        }

        Method [ <internal:ui> public method multiply ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Draw\Matrix $matrix ]
          }
          - Return [ UI\DrawMatrix ]
        }

        Method [ <internal:ui> public method isInvertible ] {

          - Parameters [0] {
          }
          - Return [ boolean or NULL ]
        }

        Method [ <internal:ui> public method invert ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:ui> class UI\Draw\Text\Font\Descriptor ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [5] {
            Parameter #0 [ <required> string $family ]
            Parameter #1 [ <required> float $size ]
            Parameter #2 [ <optional> integer $weight ]
            Parameter #3 [ <optional> integer $italic ]
            Parameter #4 [ <optional> integer $stretch ]
          }
        }

        Method [ <internal:ui> public method getFamily ] {

          - Parameters [0] {
          }
          - Return [ string ]
        }

        Method [ <internal:ui> public method getSize ] {

          - Parameters [0] {
          }
          - Return [ float ]
        }

        Method [ <internal:ui> public method getWeight ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method getItalic ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }

        Method [ <internal:ui> public method getStretch ] {

          - Parameters [0] {
          }
          - Return [ integer ]
        }
      }
    }

    Class [ <internal:ui> final class UI\Draw\Text\Font\Weight ] {

      - Constants [11] {
        Constant [ integer Thin ] { 0 }
        Constant [ integer UltraLight ] { 1 }
        Constant [ integer Light ] { 2 }
        Constant [ integer Book ] { 3 }
        Constant [ integer Normal ] { 4 }
        Constant [ integer Medium ] { 5 }
        Constant [ integer SemiBold ] { 6 }
        Constant [ integer Bold ] { 7 }
        Constant [ integer UltraBold ] { 8 }
        Constant [ integer Heavy ] { 9 }
        Constant [ integer UltraHeavy ] { 10 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:ui> final class UI\Draw\Text\Font\Italic ] {

      - Constants [3] {
        Constant [ integer Normal ] { 0 }
        Constant [ integer Oblique ] { 1 }
        Constant [ integer Italic ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:ui> final class UI\Draw\Text\Font\Stretch ] {

      - Constants [9] {
        Constant [ integer UltraCondensed ] { 0 }
        Constant [ integer ExtraCondensed ] { 1 }
        Constant [ integer Condensed ] { 2 }
        Constant [ integer SemiCondensed ] { 3 }
        Constant [ integer Normal ] { 4 }
        Constant [ integer SemiExpanded ] { 5 }
        Constant [ integer Expanded ] { 6 }
        Constant [ integer ExtraExpanded ] { 7 }
        Constant [ integer UltraExpanded ] { 8 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:ui> class UI\Draw\Text\Font ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> UI\Draw\Text\Font\Descriptor $descriptor ]
          }
        }

        Method [ <internal:ui> public method getAscent ] {

          - Parameters [0] {
          }
          - Return [ float ]
        }

        Method [ <internal:ui> public method getDescent ] {

          - Parameters [0] {
          }
          - Return [ float ]
        }

        Method [ <internal:ui> public method getLeading ] {

          - Parameters [0] {
          }
          - Return [ float ]
        }

        Method [ <internal:ui> public method getUnderlinePosition ] {

          - Parameters [0] {
          }
          - Return [ float ]
        }

        Method [ <internal:ui> public method getUnderlineThickness ] {

          - Parameters [0] {
          }
          - Return [ float ]
        }
      }
    }

    Class [ <internal:ui> class UI\Draw\Text\Layout ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:ui, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> string $text ]
            Parameter #1 [ <required> UI\Draw\Text\Font $font ]
            Parameter #2 [ <required> float $width ]
          }
        }

        Method [ <internal:ui> public method setWidth ] {

          - Parameters [1] {
            Parameter #0 [ <required> float $width ]
          }
        }

        Method [ <internal:ui> public method setColor ] {

          - Parameters [3] {
            Parameter #0 [ <required> $color ]
            Parameter #1 [ <optional> integer $start ]
            Parameter #2 [ <optional> integer $end ]
          }
        }
      }
    }
  }
}

