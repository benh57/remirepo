Extension [ <persistent> extension #153 http version 3.1.0 ] {

  - Dependencies {
    Dependency [ raphf (Required) ]
    Dependency [ propro (Required) ]
    Dependency [ spl (Required) ]
    Dependency [ hash (Required) ]
  }

  - INI {
    Entry [ http.etag.mode <ALL> ]
      Current = 'crc32b'
    }
  }

  - Constants [55] {
    Constant [ integer http\Client\Curl\FEATURES ] { 2066333 }
    Constant [ integer http\Client\Curl\Features\IPV6 ] { 1 }
    Constant [ integer http\Client\Curl\Features\KERBEROS4 ] { 2 }
    Constant [ integer http\Client\Curl\Features\KERBEROS5 ] { 262144 }
    Constant [ integer http\Client\Curl\Features\SSL ] { 4 }
    Constant [ integer http\Client\Curl\Features\LIBZ ] { 8 }
    Constant [ integer http\Client\Curl\Features\NTLM ] { 16 }
    Constant [ integer http\Client\Curl\Features\GSSNEGOTIATE ] { 32 }
    Constant [ integer http\Client\Curl\Features\ASYNCHDNS ] { 128 }
    Constant [ integer http\Client\Curl\Features\SPNEGO ] { 256 }
    Constant [ integer http\Client\Curl\Features\LARGEFILE ] { 512 }
    Constant [ integer http\Client\Curl\Features\IDN ] { 1024 }
    Constant [ integer http\Client\Curl\Features\SSPI ] { 2048 }
    Constant [ integer http\Client\Curl\Features\GSSAPI ] { 131072 }
    Constant [ integer http\Client\Curl\Features\TLSAUTH_SRP ] { 16384 }
    Constant [ integer http\Client\Curl\Features\NTLM_WB ] { 32768 }
    Constant [ integer http\Client\Curl\Features\HTTP2 ] { 65536 }
    Constant [ integer http\Client\Curl\Features\UNIX_SOCKETS ] { 524288 }
    Constant [ integer http\Client\Curl\Features\PSL ] { 1048576 }
    Constant [ string http\Client\Curl\VERSIONS ] { libcurl/7.51.0 NSS/3.27 zlib/1.2.8 libidn2/0.11 libpsl/0.14.0 (+libidn2/0.10) libssh2/1.8.0 nghttp2/1.13.0 }
    Constant [ string http\Client\Curl\Versions\CURL ] { 7.51.0 }
    Constant [ string http\Client\Curl\Versions\SSL ] { NSS/3.27 }
    Constant [ string http\Client\Curl\Versions\LIBZ ] { 1.2.8 }
    Constant [ integer http\Client\Curl\HTTP_VERSION_1_0 ] { 1 }
    Constant [ integer http\Client\Curl\HTTP_VERSION_1_1 ] { 2 }
    Constant [ integer http\Client\Curl\HTTP_VERSION_2_0 ] { 3 }
    Constant [ integer http\Client\Curl\HTTP_VERSION_2TLS ] { 4 }
    Constant [ integer http\Client\Curl\HTTP_VERSION_ANY ] { 0 }
    Constant [ integer http\Client\Curl\SSL_VERSION_TLSv1 ] { 1 }
    Constant [ integer http\Client\Curl\SSL_VERSION_TLSv1_0 ] { 4 }
    Constant [ integer http\Client\Curl\SSL_VERSION_TLSv1_1 ] { 5 }
    Constant [ integer http\Client\Curl\SSL_VERSION_TLSv1_2 ] { 6 }
    Constant [ integer http\Client\Curl\SSL_VERSION_SSLv2 ] { 2 }
    Constant [ integer http\Client\Curl\SSL_VERSION_SSLv3 ] { 3 }
    Constant [ integer http\Client\Curl\SSL_VERSION_ANY ] { 0 }
    Constant [ integer http\Client\Curl\IPRESOLVE_V4 ] { 1 }
    Constant [ integer http\Client\Curl\IPRESOLVE_V6 ] { 2 }
    Constant [ integer http\Client\Curl\IPRESOLVE_ANY ] { 0 }
    Constant [ integer http\Client\Curl\AUTH_BASIC ] { 1 }
    Constant [ integer http\Client\Curl\AUTH_DIGEST ] { 2 }
    Constant [ integer http\Client\Curl\AUTH_DIGEST_IE ] { 16 }
    Constant [ integer http\Client\Curl\AUTH_NTLM ] { 8 }
    Constant [ integer http\Client\Curl\AUTH_GSSNEG ] { 4 }
    Constant [ integer http\Client\Curl\AUTH_SPNEGO ] { 4 }
    Constant [ integer http\Client\Curl\AUTH_ANY ] { -17 }
    Constant [ integer http\Client\Curl\PROXY_SOCKS4 ] { 4 }
    Constant [ integer http\Client\Curl\PROXY_SOCKS4A ] { 5 }
    Constant [ integer http\Client\Curl\PROXY_SOCKS5_HOSTNAME ] { 5 }
    Constant [ integer http\Client\Curl\PROXY_SOCKS5 ] { 5 }
    Constant [ integer http\Client\Curl\PROXY_HTTP ] { 0 }
    Constant [ integer http\Client\Curl\PROXY_HTTP_1_0 ] { 1 }
    Constant [ integer http\Client\Curl\POSTREDIR_301 ] { 1 }
    Constant [ integer http\Client\Curl\POSTREDIR_302 ] { 2 }
    Constant [ integer http\Client\Curl\POSTREDIR_303 ] { 4 }
    Constant [ integer http\Client\Curl\POSTREDIR_ALL ] { 7 }
  }

  - Classes [31] {
    Interface [ <internal:http> interface http\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:http> class http\Exception\RuntimeException extends RuntimeException implements Throwable, http\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:http> class http\Exception\UnexpectedValueException extends UnexpectedValueException implements Throwable, http\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:http> class http\Exception\BadMethodCallException extends BadMethodCallException implements Throwable, http\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:http> class http\Exception\InvalidArgumentException extends InvalidArgumentException implements Throwable, http\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:http> class http\Exception\BadHeaderException extends DomainException implements Throwable, http\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:http> class http\Exception\BadUrlException extends DomainException implements Throwable, http\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:http> class http\Exception\BadMessageException extends DomainException implements Throwable, http\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:http> class http\Exception\BadConversionException extends DomainException implements Throwable, http\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:http> class http\Exception\BadQueryStringException extends DomainException implements Throwable, http\Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:http> class http\Cookie ] {

      - Constants [3] {
        Constant [ integer PARSE_RAW ] { 1 }
        Constant [ integer SECURE ] { 16 }
        Constant [ integer HTTPONLY ] { 32 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [26] {
        Method [ <internal:http, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $cookie_string ]
            Parameter #1 [ <optional> $parser_flags ]
            Parameter #2 [ <optional> $allowed_extras ]
          }
        }

        Method [ <internal:http> public method getCookies ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setCookies ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $cookies ]
          }
        }

        Method [ <internal:http> public method addCookies ] {

          - Parameters [1] {
            Parameter #0 [ <required> $cookies ]
          }
        }

        Method [ <internal:http> public method getCookie ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:http> public method setCookie ] {

          - Parameters [2] {
            Parameter #0 [ <required> $cookie_name ]
            Parameter #1 [ <optional> $cookie_value ]
          }
        }

        Method [ <internal:http> public method addCookie ] {

          - Parameters [2] {
            Parameter #0 [ <required> $cookie_name ]
            Parameter #1 [ <required> $cookie_value ]
          }
        }

        Method [ <internal:http> public method getExtras ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setExtras ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $extras ]
          }
        }

        Method [ <internal:http> public method addExtras ] {

          - Parameters [1] {
            Parameter #0 [ <required> $extras ]
          }
        }

        Method [ <internal:http> public method getExtra ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:http> public method setExtra ] {

          - Parameters [2] {
            Parameter #0 [ <required> $extra_name ]
            Parameter #1 [ <optional> $extra_value ]
          }
        }

        Method [ <internal:http> public method addExtra ] {

          - Parameters [2] {
            Parameter #0 [ <required> $extra_name ]
            Parameter #1 [ <required> $extra_value ]
          }
        }

        Method [ <internal:http> public method getDomain ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setDomain ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:http> public method getPath ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setPath ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:http> public method getExpires ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setExpires ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:http> public method getMaxAge ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setMaxAge ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:http> public method getFlags ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setFlags ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $value ]
          }
        }

        Method [ <internal:http> public method toArray ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method __toString ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:http> abstract class http\Encoding\Stream ] {

      - Constants [3] {
        Constant [ integer FLUSH_NONE ] { 0 }
        Constant [ integer FLUSH_SYNC ] { 1048576 }
        Constant [ integer FLUSH_FULL ] { 2097152 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:http, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $flags ]
          }
        }

        Method [ <internal:http> public method update ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:http> public method flush ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method done ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method finish ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:http> class http\Encoding\Stream\Deflate extends http\Encoding\Stream ] {

      - Constants [14] {
        Constant [ integer FLUSH_NONE ] { 0 }
        Constant [ integer FLUSH_SYNC ] { 1048576 }
        Constant [ integer FLUSH_FULL ] { 2097152 }
        Constant [ integer TYPE_GZIP ] { 16 }
        Constant [ integer TYPE_ZLIB ] { 0 }
        Constant [ integer TYPE_RAW ] { 32 }
        Constant [ integer LEVEL_DEF ] { 0 }
        Constant [ integer LEVEL_MIN ] { 1 }
        Constant [ integer LEVEL_MAX ] { 9 }
        Constant [ integer STRATEGY_DEF ] { 0 }
        Constant [ integer STRATEGY_FILT ] { 256 }
        Constant [ integer STRATEGY_HUFF ] { 512 }
        Constant [ integer STRATEGY_RLE ] { 768 }
        Constant [ integer STRATEGY_FIXED ] { 1024 }
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:http> static public method encode ] {

          - Parameters [2] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $flags ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:http, inherits http\Encoding\Stream, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $flags ]
          }
        }

        Method [ <internal:http, inherits http\Encoding\Stream> public method update ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:http, inherits http\Encoding\Stream> public method flush ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Encoding\Stream> public method done ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Encoding\Stream> public method finish ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:http> class http\Encoding\Stream\Inflate extends http\Encoding\Stream ] {

      - Constants [3] {
        Constant [ integer FLUSH_NONE ] { 0 }
        Constant [ integer FLUSH_SYNC ] { 1048576 }
        Constant [ integer FLUSH_FULL ] { 2097152 }
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:http> static public method decode ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:http, inherits http\Encoding\Stream, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $flags ]
          }
        }

        Method [ <internal:http, inherits http\Encoding\Stream> public method update ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:http, inherits http\Encoding\Stream> public method flush ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Encoding\Stream> public method done ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Encoding\Stream> public method finish ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:http> class http\Encoding\Stream\Dechunk extends http\Encoding\Stream ] {

      - Constants [3] {
        Constant [ integer FLUSH_NONE ] { 0 }
        Constant [ integer FLUSH_SYNC ] { 1048576 }
        Constant [ integer FLUSH_FULL ] { 2097152 }
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:http> static public method decode ] {

          - Parameters [2] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> &$decoded_len ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:http, inherits http\Encoding\Stream, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $flags ]
          }
        }

        Method [ <internal:http, inherits http\Encoding\Stream> public method update ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:http, inherits http\Encoding\Stream> public method flush ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Encoding\Stream> public method done ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Encoding\Stream> public method finish ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:http> class http\Header implements Serializable ] {

      - Constants [5] {
        Constant [ integer MATCH_LOOSE ] { 0 }
        Constant [ integer MATCH_CASE ] { 1 }
        Constant [ integer MATCH_WORD ] { 16 }
        Constant [ integer MATCH_FULL ] { 32 }
        Constant [ integer MATCH_STRICT ] { 33 }
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:http> static public method parse ] {

          - Parameters [2] {
            Parameter #0 [ <required> $string ]
            Parameter #1 [ <optional> $header_class ]
          }
        }
      }

      - Properties [2] {
        Property [ <default> public $name ]
        Property [ <default> public $value ]
      }

      - Methods [8] {
        Method [ <internal:http, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $name ]
            Parameter #1 [ <optional> $value ]
          }
        }

        Method [ <internal:http, prototype Serializable> public method serialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, prototype Serializable> public method unserialize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $serialized ]
          }
        }

        Method [ <internal:http> public method match ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $flags ]
          }
        }

        Method [ <internal:http> public method negotiate ] {

          - Parameters [2] {
            Parameter #0 [ <required> $supported ]
            Parameter #1 [ <optional> &$result ]
          }
        }

        Method [ <internal:http> public method getParams ] {

          - Parameters [4] {
            Parameter #0 [ <optional> $param_sep ]
            Parameter #1 [ <optional> $arg_sep ]
            Parameter #2 [ <optional> $val_sep ]
            Parameter #3 [ <optional> $flags ]
          }
        }
      }
    }

    Class [ <internal:http> class http\Header\Parser ] {

      - Constants [8] {
        Constant [ integer CLEANUP ] { 1 }
        Constant [ integer STATE_FAILURE ] { -1 }
        Constant [ integer STATE_START ] { 0 }
        Constant [ integer STATE_KEY ] { 1 }
        Constant [ integer STATE_VALUE ] { 2 }
        Constant [ integer STATE_VALUE_EX ] { 3 }
        Constant [ integer STATE_HEADER_DONE ] { 4 }
        Constant [ integer STATE_DONE ] { 5 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:http> public method getState ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method parse ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <required> $flags ]
            Parameter #2 [ <required> array or NULL &$headers ]
          }
        }

        Method [ <internal:http> public method stream ] {

          - Parameters [3] {
            Parameter #0 [ <required> $stream ]
            Parameter #1 [ <required> $flags ]
            Parameter #2 [ <required> array or NULL &$headers ]
          }
        }
      }
    }

    Class [ <internal:http> <iterateable> class http\Message implements Countable, Serializable, Iterator, Traversable ] {

      - Constants [3] {
        Constant [ integer TYPE_NONE ] { 0 }
        Constant [ integer TYPE_REQUEST ] { 1 }
        Constant [ integer TYPE_RESPONSE ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [9] {
        Property [ <default> protected $type ]
        Property [ <default> protected $body ]
        Property [ <default> protected $requestMethod ]
        Property [ <default> protected $requestUrl ]
        Property [ <default> protected $responseStatus ]
        Property [ <default> protected $responseCode ]
        Property [ <default> protected $httpVersion ]
        Property [ <default> protected $headers ]
        Property [ <default> protected $parentMessage ]
      }

      - Methods [42] {
        Method [ <internal:http, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $greedy ]
          }
        }

        Method [ <internal:http> public method getBody ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setBody ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Message\Body $body ]
          }
        }

        Method [ <internal:http> public method addBody ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Message\Body $body ]
          }
        }

        Method [ <internal:http> public method getHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <optional> $into_class ]
          }
        }

        Method [ <internal:http> public method setHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <optional> $value ]
          }
        }

        Method [ <internal:http> public method addHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:http> public method getHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setHeaders ] {

          - Parameters [1] {
            Parameter #0 [ <required> array or NULL $headers ]
          }
        }

        Method [ <internal:http> public method addHeaders ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $headers ]
            Parameter #1 [ <optional> $append ]
          }
        }

        Method [ <internal:http> public method getType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setType ] {

          - Parameters [1] {
            Parameter #0 [ <required> $type ]
          }
        }

        Method [ <internal:http> public method getInfo ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setInfo ] {

          - Parameters [1] {
            Parameter #0 [ <required> $http_info ]
          }
        }

        Method [ <internal:http> public method getResponseCode ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setResponseCode ] {

          - Parameters [2] {
            Parameter #0 [ <required> $response_code ]
            Parameter #1 [ <optional> $strict ]
          }
        }

        Method [ <internal:http> public method getResponseStatus ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setResponseStatus ] {

          - Parameters [1] {
            Parameter #0 [ <required> $response_status ]
          }
        }

        Method [ <internal:http> public method getRequestMethod ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setRequestMethod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $request_method ]
          }
        }

        Method [ <internal:http> public method getRequestUrl ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setRequestUrl ] {

          - Parameters [1] {
            Parameter #0 [ <required> $url ]
          }
        }

        Method [ <internal:http> public method getHttpVersion ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setHttpVersion ] {

          - Parameters [1] {
            Parameter #0 [ <required> $http_version ]
          }
        }

        Method [ <internal:http> public method getParentMessage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method toString ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $include_parent ]
          }
        }

        Method [ <internal:http> public method toCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }

        Method [ <internal:http> public method toStream ] {

          - Parameters [1] {
            Parameter #0 [ <required> $stream ]
          }
        }

        Method [ <internal:http, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, prototype Serializable> public method serialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, prototype Serializable> public method unserialize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $serialized ]
          }
        }

        Method [ <internal:http, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method detach ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method prepend ] {

          - Parameters [2] {
            Parameter #0 [ <required> http\Message $message ]
            Parameter #1 [ <optional> $top ]
          }
        }

        Method [ <internal:http> public method reverse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method isMultipart ] {

          - Parameters [1] {
            Parameter #0 [ <optional> &$boundary ]
          }
        }

        Method [ <internal:http> public method splitMultipartBody ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:http> class http\Message\Parser ] {

      - Constants [15] {
        Constant [ integer CLEANUP ] { 1 }
        Constant [ integer DUMB_BODIES ] { 2 }
        Constant [ integer EMPTY_REDIRECTS ] { 4 }
        Constant [ integer GREEDY ] { 8 }
        Constant [ integer STATE_FAILURE ] { -1 }
        Constant [ integer STATE_START ] { 0 }
        Constant [ integer STATE_HEADER ] { 1 }
        Constant [ integer STATE_HEADER_DONE ] { 2 }
        Constant [ integer STATE_BODY ] { 3 }
        Constant [ integer STATE_BODY_DUMB ] { 4 }
        Constant [ integer STATE_BODY_LENGTH ] { 5 }
        Constant [ integer STATE_BODY_CHUNKED ] { 6 }
        Constant [ integer STATE_BODY_DONE ] { 7 }
        Constant [ integer STATE_UPDATE_CL ] { 8 }
        Constant [ integer STATE_DONE ] { 9 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:http> public method getState ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method parse ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <required> $flags ]
            Parameter #2 [ <required> &$message ]
          }
        }

        Method [ <internal:http> public method stream ] {

          - Parameters [3] {
            Parameter #0 [ <required> $stream ]
            Parameter #1 [ <required> $flags ]
            Parameter #2 [ <required> &$message ]
          }
        }
      }
    }

    Class [ <internal:http> class http\Message\Body implements Serializable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [14] {
        Method [ <internal:http, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $stream ]
          }
        }

        Method [ <internal:http> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, prototype Serializable> public method serialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, prototype Serializable> public method unserialize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $serialized ]
          }
        }

        Method [ <internal:http> public method toStream ] {

          - Parameters [3] {
            Parameter #0 [ <required> $stream ]
            Parameter #1 [ <optional> $offset ]
            Parameter #2 [ <optional> $maxlen ]
          }
        }

        Method [ <internal:http> public method toCallback ] {

          - Parameters [3] {
            Parameter #0 [ <required> $callback ]
            Parameter #1 [ <optional> $offset ]
            Parameter #2 [ <optional> $maxlen ]
          }
        }

        Method [ <internal:http> public method getResource ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method getBoundary ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method append ] {

          - Parameters [1] {
            Parameter #0 [ <required> $string ]
          }
        }

        Method [ <internal:http> public method addForm ] {

          - Parameters [2] {
            Parameter #0 [ <optional> array or NULL $fields ]
            Parameter #1 [ <optional> array or NULL $files ]
          }
        }

        Method [ <internal:http> public method addPart ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Message $message ]
          }
        }

        Method [ <internal:http> public method etag ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method stat ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field ]
          }
        }
      }
    }

    Class [ <internal:http> <iterateable> class http\QueryString implements Serializable, ArrayAccess, IteratorAggregate, Traversable ] {

      - Constants [6] {
        Constant [ integer TYPE_BOOL ] { 13 }
        Constant [ integer TYPE_INT ] { 4 }
        Constant [ integer TYPE_FLOAT ] { 5 }
        Constant [ integer TYPE_STRING ] { 6 }
        Constant [ integer TYPE_ARRAY ] { 7 }
        Constant [ integer TYPE_OBJECT ] { 8 }
      }

      - Static properties [1] {
        Property [ private static $instance ]
      }

      - Static methods [1] {
        Method [ <internal:http> static public method getGlobalInstance ] {

          - Parameters [0] {
          }
        }
      }

      - Properties [1] {
        Property [ <default> private $queryArray ]
      }

      - Methods [20] {
        Method [ <internal:http, ctor> final public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $params ]
          }
        }

        Method [ <internal:http> public method toArray ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method get ] {

          - Parameters [4] {
            Parameter #0 [ <optional> $name ]
            Parameter #1 [ <optional> $type ]
            Parameter #2 [ <optional> $defval ]
            Parameter #3 [ <optional> $delete ]
          }
        }

        Method [ <internal:http> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> $params ]
          }
        }

        Method [ <internal:http> public method mod ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $params ]
          }
        }

        Method [ <internal:http> public method getBool ] {

          - Parameters [3] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <optional> $defval ]
            Parameter #2 [ <optional> $delete ]
          }
        }

        Method [ <internal:http> public method getInt ] {

          - Parameters [3] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <optional> $defval ]
            Parameter #2 [ <optional> $delete ]
          }
        }

        Method [ <internal:http> public method getFloat ] {

          - Parameters [3] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <optional> $defval ]
            Parameter #2 [ <optional> $delete ]
          }
        }

        Method [ <internal:http> public method getString ] {

          - Parameters [3] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <optional> $defval ]
            Parameter #2 [ <optional> $delete ]
          }
        }

        Method [ <internal:http> public method getArray ] {

          - Parameters [3] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <optional> $defval ]
            Parameter #2 [ <optional> $delete ]
          }
        }

        Method [ <internal:http> public method getObject ] {

          - Parameters [3] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <optional> $defval ]
            Parameter #2 [ <optional> $delete ]
          }
        }

        Method [ <internal:http, prototype IteratorAggregate> public method getIterator ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, prototype Serializable> public method serialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, prototype Serializable> public method unserialize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $serialized ]
          }
        }

        Method [ <internal:http, prototype ArrayAccess> public method offsetGet ] {

          - Parameters [1] {
            Parameter #0 [ <required> $offset ]
          }
        }

        Method [ <internal:http, prototype ArrayAccess> public method offsetSet ] {

          - Parameters [2] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:http, prototype ArrayAccess> public method offsetExists ] {

          - Parameters [1] {
            Parameter #0 [ <required> $offset ]
          }
        }

        Method [ <internal:http, prototype ArrayAccess> public method offsetUnset ] {

          - Parameters [1] {
            Parameter #0 [ <required> $offset ]
          }
        }
      }
    }

    Class [ <internal:http> class http\Client implements SplSubject, Countable ] {

      - Constants [6] {
        Constant [ integer DEBUG_INFO ] { 0 }
        Constant [ integer DEBUG_IN ] { 1 }
        Constant [ integer DEBUG_OUT ] { 2 }
        Constant [ integer DEBUG_HEADER ] { 16 }
        Constant [ integer DEBUG_BODY ] { 32 }
        Constant [ integer DEBUG_SSL ] { 64 }
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:http> static public method getAvailableDrivers ] {

          - Parameters [0] {
          }
        }
      }

      - Properties [4] {
        Property [ <default> private $observers ]
        Property [ <default> protected $options ]
        Property [ <default> protected $history ]
        Property [ <default> public $recordHistory ]
      }

      - Methods [31] {
        Method [ <internal:http, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $driver ]
            Parameter #1 [ <optional> $persistent_handle_id ]
          }
        }

        Method [ <internal:http> public method reset ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method enqueue ] {

          - Parameters [2] {
            Parameter #0 [ <required> http\Client\Request $request ]
            Parameter #1 [ <optional> $callable ]
          }
        }

        Method [ <internal:http> public method dequeue ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Client\Request $request ]
          }
        }

        Method [ <internal:http> public method requeue ] {

          - Parameters [2] {
            Parameter #0 [ <required> http\Client\Request $request ]
            Parameter #1 [ <optional> $callable ]
          }
        }

        Method [ <internal:http, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method send ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method once ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method wait ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $timeout ]
          }
        }

        Method [ <internal:http> public method getResponse ] {

          - Parameters [1] {
            Parameter #0 [ <optional> http\Client\Request or NULL $request ]
          }
        }

        Method [ <internal:http> public method getHistory ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method configure ] {

          - Parameters [1] {
            Parameter #0 [ <required> array or NULL $settings ]
          }
        }

        Method [ <internal, deprecated:http> public method enablePipelining ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $enable ]
          }
        }

        Method [ <internal, deprecated:http> public method enableEvents ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $enable ]
          }
        }

        Method [ <internal:http, prototype SplSubject> public method notify ] {

          - Parameters [1] {
            Parameter #0 [ <optional> http\Client\Request or NULL $request ]
          }
        }

        Method [ <internal:http, prototype SplSubject> public method attach ] {

          - Parameters [1] {
            Parameter #0 [ <required> SplObserver $observer ]
          }
        }

        Method [ <internal:http, prototype SplSubject> public method detach ] {

          - Parameters [1] {
            Parameter #0 [ <required> SplObserver $observer ]
          }
        }

        Method [ <internal:http> public method getObservers ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method getProgressInfo ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Client\Request $request ]
          }
        }

        Method [ <internal:http> public method getTransferInfo ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Client\Request $request ]
          }
        }

        Method [ <internal:http> public method setOptions ] {

          - Parameters [1] {
            Parameter #0 [ <optional> array or NULL $options ]
          }
        }

        Method [ <internal:http> public method getOptions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setSslOptions ] {

          - Parameters [1] {
            Parameter #0 [ <optional> array or NULL $ssl_option ]
          }
        }

        Method [ <internal:http> public method addSslOptions ] {

          - Parameters [1] {
            Parameter #0 [ <optional> array or NULL $ssl_options ]
          }
        }

        Method [ <internal:http> public method getSslOptions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setCookies ] {

          - Parameters [1] {
            Parameter #0 [ <optional> array or NULL $cookies ]
          }
        }

        Method [ <internal:http> public method addCookies ] {

          - Parameters [1] {
            Parameter #0 [ <optional> array or NULL $cookies ]
          }
        }

        Method [ <internal:http> public method getCookies ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method getAvailableOptions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method getAvailableConfiguration ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setDebug ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }
      }
    }

    Class [ <internal:http> <iterateable> class http\Client\Request extends http\Message implements Traversable, Iterator, Serializable, Countable ] {

      - Constants [3] {
        Constant [ integer TYPE_NONE ] { 0 }
        Constant [ integer TYPE_REQUEST ] { 1 }
        Constant [ integer TYPE_RESPONSE ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [10] {
        Property [ <default> protected $type ]
        Property [ <default> protected $body ]
        Property [ <default> protected $requestMethod ]
        Property [ <default> protected $requestUrl ]
        Property [ <default> protected $responseStatus ]
        Property [ <default> protected $responseCode ]
        Property [ <default> protected $httpVersion ]
        Property [ <default> protected $headers ]
        Property [ <default> protected $parentMessage ]
        Property [ <default> protected $options ]
      }

      - Methods [52] {
        Method [ <internal:http, overwrites http\Message, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <optional> $method ]
            Parameter #1 [ <optional> $url ]
            Parameter #2 [ <optional> array or NULL $headers ]
            Parameter #3 [ <optional> http\Message\Body or NULL $body ]
          }
        }

        Method [ <internal:http> public method setContentType ] {

          - Parameters [1] {
            Parameter #0 [ <required> $content_type ]
          }
        }

        Method [ <internal:http> public method getContentType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setQuery ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $query_data ]
          }
        }

        Method [ <internal:http> public method getQuery ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method addQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $query_data ]
          }
        }

        Method [ <internal:http> public method setOptions ] {

          - Parameters [1] {
            Parameter #0 [ <optional> array or NULL $options ]
          }
        }

        Method [ <internal:http> public method getOptions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method setSslOptions ] {

          - Parameters [1] {
            Parameter #0 [ <optional> array or NULL $ssl_options ]
          }
        }

        Method [ <internal:http> public method getSslOptions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method addSslOptions ] {

          - Parameters [1] {
            Parameter #0 [ <optional> array or NULL $ssl_options ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getBody ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setBody ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Message\Body $body ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method addBody ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Message\Body $body ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <optional> $into_class ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method setHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <optional> $value ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method addHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setHeaders ] {

          - Parameters [1] {
            Parameter #0 [ <required> array or NULL $headers ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method addHeaders ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $headers ]
            Parameter #1 [ <optional> $append ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setType ] {

          - Parameters [1] {
            Parameter #0 [ <required> $type ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getInfo ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setInfo ] {

          - Parameters [1] {
            Parameter #0 [ <required> $http_info ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getResponseCode ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setResponseCode ] {

          - Parameters [2] {
            Parameter #0 [ <required> $response_code ]
            Parameter #1 [ <optional> $strict ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getResponseStatus ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setResponseStatus ] {

          - Parameters [1] {
            Parameter #0 [ <required> $response_status ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getRequestMethod ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setRequestMethod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $request_method ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getRequestUrl ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setRequestUrl ] {

          - Parameters [1] {
            Parameter #0 [ <required> $url ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getHttpVersion ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setHttpVersion ] {

          - Parameters [1] {
            Parameter #0 [ <required> $http_version ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getParentMessage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method toString ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $include_parent ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method toCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method toStream ] {

          - Parameters [1] {
            Parameter #0 [ <required> $stream ]
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Serializable> public method serialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Serializable> public method unserialize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $serialized ]
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method detach ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method prepend ] {

          - Parameters [2] {
            Parameter #0 [ <required> http\Message $message ]
            Parameter #1 [ <optional> $top ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method reverse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method isMultipart ] {

          - Parameters [1] {
            Parameter #0 [ <optional> &$boundary ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method splitMultipartBody ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:http> <iterateable> class http\Client\Response extends http\Message implements Traversable, Iterator, Serializable, Countable ] {

      - Constants [3] {
        Constant [ integer TYPE_NONE ] { 0 }
        Constant [ integer TYPE_REQUEST ] { 1 }
        Constant [ integer TYPE_RESPONSE ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [10] {
        Property [ <default> protected $type ]
        Property [ <default> protected $body ]
        Property [ <default> protected $requestMethod ]
        Property [ <default> protected $requestUrl ]
        Property [ <default> protected $responseStatus ]
        Property [ <default> protected $responseCode ]
        Property [ <default> protected $httpVersion ]
        Property [ <default> protected $headers ]
        Property [ <default> protected $parentMessage ]
        Property [ <default> protected $transferInfo ]
      }

      - Methods [44] {
        Method [ <internal:http> public method getCookies ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $flags ]
            Parameter #1 [ <optional> $allowed_extras ]
          }
        }

        Method [ <internal:http> public method getTransferInfo ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $element ]
          }
        }

        Method [ <internal:http, inherits http\Message, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $greedy ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getBody ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setBody ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Message\Body $body ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method addBody ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Message\Body $body ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <optional> $into_class ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method setHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <optional> $value ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method addHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setHeaders ] {

          - Parameters [1] {
            Parameter #0 [ <required> array or NULL $headers ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method addHeaders ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $headers ]
            Parameter #1 [ <optional> $append ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setType ] {

          - Parameters [1] {
            Parameter #0 [ <required> $type ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getInfo ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setInfo ] {

          - Parameters [1] {
            Parameter #0 [ <required> $http_info ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getResponseCode ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setResponseCode ] {

          - Parameters [2] {
            Parameter #0 [ <required> $response_code ]
            Parameter #1 [ <optional> $strict ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getResponseStatus ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setResponseStatus ] {

          - Parameters [1] {
            Parameter #0 [ <required> $response_status ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getRequestMethod ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setRequestMethod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $request_method ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getRequestUrl ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setRequestUrl ] {

          - Parameters [1] {
            Parameter #0 [ <required> $url ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getHttpVersion ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setHttpVersion ] {

          - Parameters [1] {
            Parameter #0 [ <required> $http_version ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getParentMessage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method toString ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $include_parent ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method toCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method toStream ] {

          - Parameters [1] {
            Parameter #0 [ <required> $stream ]
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Serializable> public method serialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Serializable> public method unserialize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $serialized ]
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method detach ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method prepend ] {

          - Parameters [2] {
            Parameter #0 [ <required> http\Message $message ]
            Parameter #1 [ <optional> $top ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method reverse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method isMultipart ] {

          - Parameters [1] {
            Parameter #0 [ <optional> &$boundary ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method splitMultipartBody ] {

          - Parameters [0] {
          }
        }
      }
    }

    Interface [ <internal:http> interface http\Client\Curl\User ] {

      - Constants [5] {
        Constant [ integer POLL_NONE ] { 0 }
        Constant [ integer POLL_IN ] { 1 }
        Constant [ integer POLL_OUT ] { 2 }
        Constant [ integer POLL_INOUT ] { 3 }
        Constant [ integer POLL_REMOVE ] { 4 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:http> abstract public method init ] {

          - Parameters [1] {
            Parameter #0 [ <required> $run ]
          }
        }

        Method [ <internal:http> abstract public method timer ] {

          - Parameters [1] {
            Parameter #0 [ <required> integer $timeout_ms ]
          }
        }

        Method [ <internal:http> abstract public method socket ] {

          - Parameters [2] {
            Parameter #0 [ <required> $socket ]
            Parameter #1 [ <required> integer $action ]
          }
        }

        Method [ <internal:http> abstract public method once ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> abstract public method wait ] {

          - Parameters [1] {
            Parameter #0 [ <optional> integer $timeout_ms ]
          }
        }

        Method [ <internal:http> abstract public method send ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:http> class http\Url ] {

      - Constants [22] {
        Constant [ integer REPLACE ] { 0 }
        Constant [ integer JOIN_PATH ] { 1 }
        Constant [ integer JOIN_QUERY ] { 2 }
        Constant [ integer STRIP_USER ] { 4 }
        Constant [ integer STRIP_PASS ] { 8 }
        Constant [ integer STRIP_AUTH ] { 12 }
        Constant [ integer STRIP_PORT ] { 32 }
        Constant [ integer STRIP_PATH ] { 64 }
        Constant [ integer STRIP_QUERY ] { 128 }
        Constant [ integer STRIP_FRAGMENT ] { 256 }
        Constant [ integer STRIP_ALL ] { 492 }
        Constant [ integer FROM_ENV ] { 4096 }
        Constant [ integer SANITIZE_PATH ] { 8192 }
        Constant [ integer PARSE_MBLOC ] { 65536 }
        Constant [ integer PARSE_MBUTF8 ] { 131072 }
        Constant [ integer PARSE_TOIDN ] { 1048576 }
        Constant [ integer PARSE_TOIDN_2003 ] { 9437184 }
        Constant [ integer PARSE_TOIDN_2008 ] { 5242880 }
        Constant [ integer PARSE_TOPCT ] { 2097152 }
        Constant [ integer IGNORE_ERRORS ] { 268435456 }
        Constant [ integer SILENT_ERRORS ] { 536870912 }
        Constant [ integer STDFLAGS ] { 3350531 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [8] {
        Property [ <default> public $scheme ]
        Property [ <default> public $user ]
        Property [ <default> public $pass ]
        Property [ <default> public $host ]
        Property [ <default> public $port ]
        Property [ <default> public $path ]
        Property [ <default> public $query ]
        Property [ <default> public $fragment ]
      }

      - Methods [5] {
        Method [ <internal:http, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $old_url ]
            Parameter #1 [ <optional> $new_url ]
            Parameter #2 [ <optional> $flags ]
          }
        }

        Method [ <internal:http> public method mod ] {

          - Parameters [2] {
            Parameter #0 [ <required> $more_url_parts ]
            Parameter #1 [ <optional> $flags ]
          }
        }

        Method [ <internal:http> public method toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method toArray ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:http> class http\Env\Url extends http\Url ] {

      - Constants [19] {
        Constant [ integer REPLACE ] { 0 }
        Constant [ integer JOIN_PATH ] { 1 }
        Constant [ integer JOIN_QUERY ] { 2 }
        Constant [ integer STRIP_USER ] { 4 }
        Constant [ integer STRIP_PASS ] { 8 }
        Constant [ integer STRIP_AUTH ] { 12 }
        Constant [ integer STRIP_PORT ] { 32 }
        Constant [ integer STRIP_PATH ] { 64 }
        Constant [ integer STRIP_QUERY ] { 128 }
        Constant [ integer STRIP_FRAGMENT ] { 256 }
        Constant [ integer STRIP_ALL ] { 492 }
        Constant [ integer FROM_ENV ] { 4096 }
        Constant [ integer SANITIZE_PATH ] { 8192 }
        Constant [ integer PARSE_MBLOC ] { 65536 }
        Constant [ integer PARSE_MBUTF8 ] { 131072 }
        Constant [ integer PARSE_TOIDN ] { 1048576 }
        Constant [ integer PARSE_TOIDN_2003 ] { 9437184 }
        Constant [ integer PARSE_TOIDN_2008 ] { 5242880 }
        Constant [ integer PARSE_TOPCT ] { 2097152 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [8] {
        Property [ <default> public $scheme ]
        Property [ <default> public $user ]
        Property [ <default> public $pass ]
        Property [ <default> public $host ]
        Property [ <default> public $port ]
        Property [ <default> public $path ]
        Property [ <default> public $query ]
        Property [ <default> public $fragment ]
      }

      - Methods [5] {
        Method [ <internal:http, overwrites http\Url, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $old_url ]
            Parameter #1 [ <optional> $new_url ]
            Parameter #2 [ <optional> $flags ]
          }
        }

        Method [ <internal:http, overwrites http\Url, prototype http\Url> public method mod ] {

          - Parameters [2] {
            Parameter #0 [ <required> $more_url_parts ]
            Parameter #1 [ <optional> $flags ]
          }
        }

        Method [ <internal:http, overwrites http\Url, prototype http\Url> public method toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, overwrites http\Url, prototype http\Url> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, overwrites http\Url, prototype http\Url> public method toArray ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:http> class http\Env ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [13] {
        Method [ <internal:http> static public method getRequestHeader ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $header_name ]
          }
        }

        Method [ <internal:http> static public method getRequestBody ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $body_class_name ]
          }
        }

        Method [ <internal:http> static public method getResponseStatusForCode ] {

          - Parameters [1] {
            Parameter #0 [ <required> $code ]
          }
        }

        Method [ <internal:http> static public method getResponseStatusForAllCodes ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> static public method getResponseHeader ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $header_name ]
          }
        }

        Method [ <internal:http> static public method getResponseCode ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> static public method setResponseHeader ] {

          - Parameters [4] {
            Parameter #0 [ <required> $header_name ]
            Parameter #1 [ <optional> $header_value ]
            Parameter #2 [ <optional> $response_code ]
            Parameter #3 [ <optional> $replace_header ]
          }
        }

        Method [ <internal:http> static public method setResponseCode ] {

          - Parameters [1] {
            Parameter #0 [ <required> $code ]
          }
        }

        Method [ <internal:http> static public method negotiateLanguage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $supported ]
            Parameter #1 [ <optional> &$result_array ]
          }
        }

        Method [ <internal:http> static public method negotiateContentType ] {

          - Parameters [2] {
            Parameter #0 [ <required> $supported ]
            Parameter #1 [ <optional> &$result_array ]
          }
        }

        Method [ <internal:http> static public method negotiateEncoding ] {

          - Parameters [2] {
            Parameter #0 [ <required> $supported ]
            Parameter #1 [ <optional> &$result_array ]
          }
        }

        Method [ <internal:http> static public method negotiateCharset ] {

          - Parameters [2] {
            Parameter #0 [ <required> $supported ]
            Parameter #1 [ <optional> &$result_array ]
          }
        }

        Method [ <internal:http> static public method negotiate ] {

          - Parameters [4] {
            Parameter #0 [ <required> $params ]
            Parameter #1 [ <required> $supported ]
            Parameter #2 [ <optional> $primary_type_separator ]
            Parameter #3 [ <optional> &$result_array ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:http> <iterateable> class http\Env\Request extends http\Message implements Traversable, Iterator, Serializable, Countable ] {

      - Constants [3] {
        Constant [ integer TYPE_NONE ] { 0 }
        Constant [ integer TYPE_REQUEST ] { 1 }
        Constant [ integer TYPE_RESPONSE ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [13] {
        Property [ <default> protected $type ]
        Property [ <default> protected $body ]
        Property [ <default> protected $requestMethod ]
        Property [ <default> protected $requestUrl ]
        Property [ <default> protected $responseStatus ]
        Property [ <default> protected $responseCode ]
        Property [ <default> protected $httpVersion ]
        Property [ <default> protected $headers ]
        Property [ <default> protected $parentMessage ]
        Property [ <default> protected $query ]
        Property [ <default> protected $form ]
        Property [ <default> protected $cookie ]
        Property [ <default> protected $files ]
      }

      - Methods [46] {
        Method [ <internal:http, overwrites http\Message, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method getForm ] {

          - Parameters [4] {
            Parameter #0 [ <optional> $name ]
            Parameter #1 [ <optional> $type ]
            Parameter #2 [ <optional> $defval ]
            Parameter #3 [ <optional> $delete ]
          }
        }

        Method [ <internal:http> public method getQuery ] {

          - Parameters [4] {
            Parameter #0 [ <optional> $name ]
            Parameter #1 [ <optional> $type ]
            Parameter #2 [ <optional> $defval ]
            Parameter #3 [ <optional> $delete ]
          }
        }

        Method [ <internal:http> public method getCookie ] {

          - Parameters [4] {
            Parameter #0 [ <optional> $name ]
            Parameter #1 [ <optional> $type ]
            Parameter #2 [ <optional> $defval ]
            Parameter #3 [ <optional> $delete ]
          }
        }

        Method [ <internal:http> public method getFiles ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method getBody ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setBody ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Message\Body $body ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method addBody ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Message\Body $body ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <optional> $into_class ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method setHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <optional> $value ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method addHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setHeaders ] {

          - Parameters [1] {
            Parameter #0 [ <required> array or NULL $headers ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method addHeaders ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $headers ]
            Parameter #1 [ <optional> $append ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setType ] {

          - Parameters [1] {
            Parameter #0 [ <required> $type ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getInfo ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setInfo ] {

          - Parameters [1] {
            Parameter #0 [ <required> $http_info ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getResponseCode ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setResponseCode ] {

          - Parameters [2] {
            Parameter #0 [ <required> $response_code ]
            Parameter #1 [ <optional> $strict ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getResponseStatus ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setResponseStatus ] {

          - Parameters [1] {
            Parameter #0 [ <required> $response_status ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getRequestMethod ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setRequestMethod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $request_method ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getRequestUrl ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setRequestUrl ] {

          - Parameters [1] {
            Parameter #0 [ <required> $url ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getHttpVersion ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setHttpVersion ] {

          - Parameters [1] {
            Parameter #0 [ <required> $http_version ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getParentMessage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method toString ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $include_parent ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method toCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method toStream ] {

          - Parameters [1] {
            Parameter #0 [ <required> $stream ]
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Serializable> public method serialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Serializable> public method unserialize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $serialized ]
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method detach ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method prepend ] {

          - Parameters [2] {
            Parameter #0 [ <required> http\Message $message ]
            Parameter #1 [ <optional> $top ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method reverse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method isMultipart ] {

          - Parameters [1] {
            Parameter #0 [ <optional> &$boundary ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method splitMultipartBody ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:http> <iterateable> class http\Env\Response extends http\Message implements Traversable, Iterator, Serializable, Countable ] {

      - Constants [8] {
        Constant [ integer TYPE_NONE ] { 0 }
        Constant [ integer TYPE_REQUEST ] { 1 }
        Constant [ integer TYPE_RESPONSE ] { 2 }
        Constant [ integer CONTENT_ENCODING_NONE ] { 0 }
        Constant [ integer CONTENT_ENCODING_GZIP ] { 1 }
        Constant [ integer CACHE_NO ] { 0 }
        Constant [ integer CACHE_HIT ] { 1 }
        Constant [ integer CACHE_MISS ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [19] {
        Property [ <default> protected $type ]
        Property [ <default> protected $body ]
        Property [ <default> protected $requestMethod ]
        Property [ <default> protected $requestUrl ]
        Property [ <default> protected $responseStatus ]
        Property [ <default> protected $responseCode ]
        Property [ <default> protected $httpVersion ]
        Property [ <default> protected $headers ]
        Property [ <default> protected $parentMessage ]
        Property [ <default> protected $request ]
        Property [ <default> protected $cookies ]
        Property [ <default> protected $contentType ]
        Property [ <default> protected $contentDisposition ]
        Property [ <default> protected $contentEncoding ]
        Property [ <default> protected $cacheControl ]
        Property [ <default> protected $etag ]
        Property [ <default> protected $lastModified ]
        Property [ <default> protected $throttleDelay ]
        Property [ <default> protected $throttleChunk ]
      }

      - Methods [55] {
        Method [ <internal:http, overwrites http\Message, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method __invoke ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ob_string ]
            Parameter #1 [ <optional> $ob_flags ]
          }
        }

        Method [ <internal:http> public method setEnvRequest ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Message or NULL $env_request ]
          }
        }

        Method [ <internal:http> public method setCookie ] {

          - Parameters [1] {
            Parameter #0 [ <required> $cookie ]
          }
        }

        Method [ <internal:http> public method setContentType ] {

          - Parameters [1] {
            Parameter #0 [ <required> $content_type ]
          }
        }

        Method [ <internal:http> public method setContentDisposition ] {

          - Parameters [1] {
            Parameter #0 [ <required> array or NULL $disposition_params ]
          }
        }

        Method [ <internal:http> public method setContentEncoding ] {

          - Parameters [1] {
            Parameter #0 [ <required> $content_encoding ]
          }
        }

        Method [ <internal:http> public method setCacheControl ] {

          - Parameters [1] {
            Parameter #0 [ <required> $cache_control ]
          }
        }

        Method [ <internal:http> public method setLastModified ] {

          - Parameters [1] {
            Parameter #0 [ <required> $last_modified ]
          }
        }

        Method [ <internal:http> public method isCachedByLastModified ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $header_name ]
          }
        }

        Method [ <internal:http> public method setEtag ] {

          - Parameters [1] {
            Parameter #0 [ <required> $etag ]
          }
        }

        Method [ <internal:http> public method isCachedByEtag ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $header_name ]
          }
        }

        Method [ <internal:http> public method setThrottleRate ] {

          - Parameters [2] {
            Parameter #0 [ <required> $chunk_size ]
            Parameter #1 [ <optional> $delay ]
          }
        }

        Method [ <internal:http> public method send ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $stream ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getBody ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setBody ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Message\Body $body ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method addBody ] {

          - Parameters [1] {
            Parameter #0 [ <required> http\Message\Body $body ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <optional> $into_class ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method setHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <optional> $value ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method addHeader ] {

          - Parameters [2] {
            Parameter #0 [ <required> $header ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setHeaders ] {

          - Parameters [1] {
            Parameter #0 [ <required> array or NULL $headers ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method addHeaders ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $headers ]
            Parameter #1 [ <optional> $append ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setType ] {

          - Parameters [1] {
            Parameter #0 [ <required> $type ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getInfo ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setInfo ] {

          - Parameters [1] {
            Parameter #0 [ <required> $http_info ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getResponseCode ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setResponseCode ] {

          - Parameters [2] {
            Parameter #0 [ <required> $response_code ]
            Parameter #1 [ <optional> $strict ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getResponseStatus ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setResponseStatus ] {

          - Parameters [1] {
            Parameter #0 [ <required> $response_status ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getRequestMethod ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setRequestMethod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $request_method ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getRequestUrl ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setRequestUrl ] {

          - Parameters [1] {
            Parameter #0 [ <required> $url ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getHttpVersion ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method setHttpVersion ] {

          - Parameters [1] {
            Parameter #0 [ <required> $http_version ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method getParentMessage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method toString ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $include_parent ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method toCallback ] {

          - Parameters [1] {
            Parameter #0 [ <required> $callback ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method toStream ] {

          - Parameters [1] {
            Parameter #0 [ <required> $stream ]
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Serializable> public method serialize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Serializable> public method unserialize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $serialized ]
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method detach ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method prepend ] {

          - Parameters [2] {
            Parameter #0 [ <required> http\Message $message ]
            Parameter #1 [ <optional> $top ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method reverse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, inherits http\Message> public method isMultipart ] {

          - Parameters [1] {
            Parameter #0 [ <optional> &$boundary ]
          }
        }

        Method [ <internal:http, inherits http\Message> public method splitMultipartBody ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:http> class http\Params implements ArrayAccess ] {

      - Constants [12] {
        Constant [ string DEF_PARAM_SEP ] { , }
        Constant [ string DEF_ARG_SEP ] { ; }
        Constant [ string DEF_VAL_SEP ] { = }
        Constant [ string COOKIE_PARAM_SEP ] {  }
        Constant [ integer PARSE_RAW ] { 0 }
        Constant [ integer PARSE_ESCAPED ] { 1 }
        Constant [ integer PARSE_URLENCODED ] { 4 }
        Constant [ integer PARSE_DIMENSION ] { 8 }
        Constant [ integer PARSE_RFC5987 ] { 16 }
        Constant [ integer PARSE_RFC5988 ] { 32 }
        Constant [ integer PARSE_DEFAULT ] { 17 }
        Constant [ integer PARSE_QUERY ] { 12 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [5] {
        Property [ <default> public $params ]
        Property [ <default> public $param_sep ]
        Property [ <default> public $arg_sep ]
        Property [ <default> public $val_sep ]
        Property [ <default> public $flags ]
      }

      - Methods [8] {
        Method [ <internal:http, ctor> final public method __construct ] {

          - Parameters [5] {
            Parameter #0 [ <optional> $params ]
            Parameter #1 [ <optional> $param_sep ]
            Parameter #2 [ <optional> $arg_sep ]
            Parameter #3 [ <optional> $val_sep ]
            Parameter #4 [ <optional> $flags ]
          }
        }

        Method [ <internal:http> public method toArray ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:http, prototype ArrayAccess> public method offsetExists ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:http, prototype ArrayAccess> public method offsetUnset ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:http, prototype ArrayAccess> public method offsetSet ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:http, prototype ArrayAccess> public method offsetGet ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }
      }
    }
  }
}

